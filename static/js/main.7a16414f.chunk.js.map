{"version":3,"sources":["modules/getStuff.js","actions/index.js","components/Sidebar.js","containers/Sidebar.js","components/Infobox.js","containers/Infobox.js","components/tabs/Tabs.js","containers/tabs/VisibleTabs.js","components/Building.js","containers/Building.js","components/tabs/HomeTab.js","containers/tabs/HomeTab.js","components/tabs/TownTab.js","containers/tabs/TownTab.js","components/Map.js","containers/Map.js","components/tabs/MapTab.js","containers/tabs/MapTab.js","components/Tech.js","containers/Tech.js","components/tabs/ScienceTab.js","containers/tabs/ScienceTab.js","components/App.js","containers/App.js","reducers/resources.js","reducers/info.js","reducers/buildings.js","reducers/units.js","reducers/tech.js","reducers/effects.js","reducers/bigReducers.js","reducers/index.js","index.js","initialState.js"],"names":["exports","module","getNum","target","value","buildings","arguments","length","undefined","resources","tech","_i","_Object$keys","Object","keys","name","_i2","_Object$keys2","_i3","_Object$keys3","getValue","researched","number","sendInfo","info","type","addTab","key","addResource","addMap","map","addBuilding","build","n","harvest","hire","idCounter","spawnUnit","species","job","location","id","research","applyEffects","getStuff","require","Sidebar","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","parseFloat","toFixed","Math","round","abs","effects","_this","out","maxTarget","income","generator","overallEffect","constant","modifiers","modifers","incomeDetails","react_default","a","createElement","className","maxDetails","totalIncome","values","reduce","b","incomeOut","totalMax","maxOut","_this2","show","visibleResources","res","seasonalBar","time","ResourceLine","getEffects","Component","Sidebar_Resource","max","Resource","mouseover","includes","connect","state","techs","Infobox","mapDispatchToProps","Tabs","onClickTabItem","tab","setState","activeTab","children","label","child","visibleTabs","Tabs_Tab","onClick","Tab","_this3$props","_this3","_this$props","Building","enoughResources","enoughBuildings","resource","cost","visibleBuildings","desc","entries","entry","addMaxBirbs","HomeTab","studyButton","progression","craftingMenu","recipes","HomeTab_CraftingLine","containers_Building","CraftingLine","craft","TownTab","birbs","visibleJobs","unemployed","TownTab_JobLine","JobLine","Map","canvasRef","React","createRef","canvas","dpr","window","devicePixelRatio","rect","getBoundingClientRect","width","height","ctx","getContext","scale","pixSize","col","i","row","fillStyle","fillRect","corner","unit","units","beginPath","arc","lineWidth","stroke","fill","current","renderBackground","renderUnits","clearRect","ref","MapTab","zoom","7","6","5","4","3","2","1","0","x","y","move","containers_Map","sendUnitInfo","Tech","parentCoords","coords","path","vertDist","horizDist","selectTech","techList","paths","display","parents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","parentName","parent","console","log","push","getPath","position","err","return","buttonToRender","coordsHtml","left","top","d","style","ScienceTab","selected","prereqsSatisfied","addJob","displayResearch","selectedTech","description","techObjectsList","containers_Tech","displaySelected","App","counter","daylength","unlockEverything","setProgression","timerID","setInterval","tick","newTime","Date","getTime","dayLength","adoptBirb","random","hunger","setHunger","moveUnit","incomeGenerator","save","whence","inState","JSON","parse","localStorage","getItem","load","setItem","stringify","containers_Sidebar","VisibleTabs","containers_tabs_HomeTab","containers_tabs_TownTab","containers_tabs_ScienceTab","containers_tabs_MapTab","containers_Infobox","set","action","update","defineProperty","$set","_objectSpread2","objectSpread","_update2","j","assign","concat","$push","season","day","hour","spring","summer","fall","winter","pop","newNum","newUnit","toConsumableArray","newLoc","newResources","bigReducers","incomes","_i4","_Object$keys4","amount","resourceChange","newResource","smolReducers","combineReducers","rootReducer","reduceReducers","container","document","body","appendChild","bluebs","wood","clay","stone","knowledge","books","drawings","boxes","maxbluebs","maxwood","maxclay","maxstone","maxknowledge","maxbooks","maxdrawings","maxboxes","maxbirbs","foragers","woodpeckers","scholars","base","nest","birbhouse","campfire","library","home","happiness","studying","training","teaching","drawing","woodworking","digging","fire","pottery","construction","math","writing","cartography","exploration","store","createStore","render","es","content","containers_App"],"mappings":"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","file":"static/js/main.7a16414f.chunk.js","sourcesContent":["var exports = module.exports = {};\r\n\r\n\r\nvar getValue = (target, buildings=null, resources=null, tech=null,) => { //gets the object of a name (ex: gets the number of 'woodpeckers', or the building object of 'birbhouse')\r\n  if (buildings){\r\n    for (const name of Object.keys(buildings)){\r\n      if (name==target){\r\n        return [buildings[name], 'building']}}}\r\n  if (resources){\r\n    for (const name of Object.keys(resources)){\r\n      if (name==target){\r\n        return [resources[name], 'resource']}}}\r\n  if (tech){\r\n    for (const name of Object.keys(tech)){\r\n      if (name==target){\r\n        return [tech[name], 'tech']}}}\r\n  return false}\r\nvar getNum = (target, buildings=null, resources=null, tech=false,) => {\r\n  var value = getValue(target, buildings, resources, tech)\r\n  if (value[1]=='tech'){return value[0].researched}\r\n  if (value[1]=='building'){return value[0].number}\r\n  if (value[1]=='resource'){return value[0]}\r\n  return(value[0])}\r\n\r\nexports.getNum=getNum\r\n","\r\nexport const sendInfo = info => ({\r\n  type: 'SEND_INFO',\r\n  info})\r\nexport const tick = () => ({\r\n  type: 'TICK'})\r\n\r\nexport const addTab = (key, name) => ({\r\n  type: 'ADD_TAB', key, name})\r\nexport const addResource = name => ({\r\n  type: 'ADD_RESOURCE', name})\r\nexport const addJob = name => ({\r\n  type: 'ADD_JOB',\r\n  name})\r\nexport const addMap = map => ({\r\n  type: 'ADD_MAP', map})\r\nexport const addBuilding = name => ({\r\n  type: 'ADD_BUILDING', name})\r\n\r\nexport const changeBirbs = n => ({\r\n  type: 'CHANGE_BIRBS', n })\r\nexport const adoptBirb = n => ({\r\n  type: 'ADOPT_BIRB', n})\r\n\r\nexport const build = (name, n) => ({\r\n  type: 'BUILD', name, n})\r\nexport const harvest = (name, n) => ({\r\n  type: 'HARVEST', name, n})\r\nexport const hire = (name, n) => ({\r\n  type: 'HIRE', name, n})\r\nexport const addMaxBirbs = (n) => ({\r\n  type: 'ADD_MAX_BIRBS', n})\r\nexport const set = (name, n) => ({\r\n  type: 'SET', name, n})\r\n\r\nlet idCounter = 0\r\nexport const spawnUnit = (name, species, job, location) => ({\r\n  type: 'SPAWN_UNIT',\r\n  id: idCounter++,\r\n  name, species, job, location })\r\nexport const moveUnit = (id, x, y) => ({\r\n  type: 'MOVE_UNIT', id, x, y})\r\n\r\nexport const research = (name) => ({\r\n  type: 'RESEARCH', name,})\r\nexport const selectTech = (name) => ({\r\n  type: 'SELECT_TECH', name,})\r\nexport const setProgression = (n) => ({\r\n  type: 'SET_PROGRESSION', n})\r\nexport const setHunger = (n) => ({\r\n  type: 'SET_HUNGER', n})\r\n\r\nexport const changeEffect = (name, target, n) => ({\r\n  type: 'CHANGE_EFFECT', name, target, n})\r\nexport const applyEffects = (name, n) => ({\r\n  type: 'APPLY_EFFECTS', name, n})\r\nexport const applyModifiers = (name, target, n) => ({\r\n  type: 'APPLY_MODIFIERS', name, target, n})\r\nexport const income = (name, n) => ({\r\n  type: 'INCOME', name, n})\r\nexport const load = () => ({\r\n  type: 'LOAD'})\r\n","import React, { Component } from 'react'\r\n\r\nvar getStuff = require('../modules/getStuff.js');\r\n\r\nclass Sidebar extends Component{\r\n  constructor(props){super(props);}\r\n  round(n){\r\n    if (n>1000000){\r\n      return (parseFloat((n/1000000.).toFixed(2))+'m')}\r\n    if (n>1000){\r\n      return (parseFloat((n/1000.).toFixed(2))+'k')}\r\n    if (n>100){\r\n      return Math.round(n)}\r\n    if (Math.abs(n - Math.round(n)) > .001){\r\n      return n.toFixed(2)}\r\n    else{return Math.round(n)}\r\n  }\r\n\r\n  getEffects(target, effects, resources){\r\n    var out = [{}, {}, {}, {}] //[0]:incomes, [1]:perm effects [2]: max effects [3]:modifiers\r\n    const maxTarget = 'max'+target\r\n    for (var generator of Object.keys(effects.income)){\r\n      if (target in effects.income[generator]){\r\n        const overallEffect = effects.income[generator][target]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if (overallEffect){\r\n          out[0][generator] = overallEffect}}}\r\n    for (var generator of Object.keys(effects.constant)){\r\n      if (target in effects.constant[generator]){\r\n        const overallEffect = effects.constant[generator][target]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if(overallEffect){\r\n          out[1][generator] = overallEffect}}\r\n      if (maxTarget in effects.constant[generator]){\r\n        const overallEffect = effects.constant[generator][maxTarget]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if(overallEffect){\r\n          out[2][generator] = overallEffect}}}\r\n    for (var generator of Object.keys(effects.modifiers)){\r\n      if (target in effects.modifiers[generator]){\r\n        const overallEffect = effects.modifers[generator][target]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if(overallEffect){\r\n          out[3][generator] = overallEffect}}}\r\n    var incomeDetails = Object.keys(out[0]).map(generator => <div className='effect-detail'> &nbsp; {generator}: {this.round(10*out[0][generator])}/s <br/> </div>)\r\n    var effectsDetails = Object.keys(out[1]).map(generator => <div className='effect-detail'> &nbsp; {generator}: {this.round(out[1][generator])} <br/> </div>)\r\n    var maxDetails = Object.keys(out[2]).map(generator => <div className='effect-detail'> &nbsp; {generator}: {this.round(out[2][generator])} <br/> </div>)\r\n    var modifiersDetails = Object.keys(out[3]).map(generator => <div className='effect-detail'> &nbsp; {generator}: {out[3][generator]} <br/> </div>)\r\n    if (Object.keys(out[0]).length>0){\r\n      var totalIncome = 'income: ' + this.round(10*(Object.values(out[0]).reduce((a, b) => a+b, 0))) + '/s'\r\n      var incomeOut = <div>\r\n        {totalIncome}\r\n        {incomeDetails}\r\n      </div>}\r\n    if (Object.keys(out[1]).length>0){\r\n      }\r\n    if (Object.keys(out[2]).length>0){\r\n      var totalMax = 'cap: ' + this.round(resources[maxTarget])\r\n      var maxOut = <div>\r\n        {totalMax}\r\n        {maxDetails}\r\n      </div>}\r\n    if (Object.keys(out[3]).length>0){\r\n      }\r\n    return (\r\n      <div>\r\n        {incomeOut}\r\n        {maxOut}\r\n      </div>\r\n    )\r\n\r\n\r\n  }\r\n\r\n  render(){\r\n    const show = this.props.visibleResources\r\n    const res = this.props.resources\r\n    const resourceList = [ //this is for ordering in the sidebar, mostly\r\n      'birbs', 'bluebs', 'wood', 'clay', 'stone', 'knowledge', 'boxes', 'drawings', 'books', ]\r\n\r\n    var seasonalBar = \"sidebar-\" + this.props.time[0]\r\n    return (\r\n      <div className='sidebar-wrapper'>\r\n      <div className={seasonalBar}>\r\n        {this.props.time[0]} day {this.props.time[1]} <br />\r\n        ~~~~~~~~~~~~~~~~~~\r\n        {resourceList.map(name =>\r\n          <ResourceLine name={name} res={res} show={show} getEffects={() => this.getEffects(name, this.props.effects, res)} /> )}\r\n      </div>\r\n      </div>)}}\r\nfunction ResourceLine(props) {\r\n  return (<Resource name={props.name} res={props.res[props.name]} max={props.res['max'+props.name]} show={props.show} getEffects={props.getEffects}/>)}\r\n\r\nclass Resource extends Component{\r\n  constructor(props){super(props);}\r\n  round(n){\r\n    if (n>=1000000){\r\n      return (parseFloat((n/1000000.).toFixed(2))+'m')}\r\n    if (n>=1000){\r\n      return (parseFloat((n/1000.).toFixed(2))+'k')}\r\n    if (n>=100){\r\n      return Math.round(n)}\r\n    if (Math.abs(n - Math.round(n)) < .001){\r\n      return Math.round(n)}\r\n    if (n>=10){\r\n      return n.toFixed(1)}\r\n    return n.toFixed(2)\r\n  }\r\n\r\n  render() {\r\n    var mouseover =\r\n      (<div className='sidebar-item-mouseover'>\r\n        {this.props.getEffects()}\r\n      </div>)\r\n\r\n    if (this.props.show.includes(this.props.name)){\r\n      return (\r\n        <div className='sidebar-item'>\r\n          {this.props.name}: {this.round(this.props.res)}/{this.round(this.props.max)} <br/>\r\n          {mouseover}\r\n        </div>)\r\n      }\r\n    else{return(<div />)}\r\n  }\r\n}\r\n\r\nexport default Sidebar\r\n","import { connect } from 'react-redux'\r\nimport { } from '../actions'\r\nimport Sidebar from '../components/Sidebar'\r\n\r\nconst mapStateToProps = state => ({\r\n  resources: state.resources,\r\n  buildings: state.buildings,\r\n  techs: state.techs,\r\n\r\n  visibleResources: state.info.visibleResources,\r\n\r\n  time: state.info.time,\r\n  effects: state.effects,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Sidebar)\r\n","import React, { Component } from 'react'\r\n//doesnt use redux cuz its simple\r\n\r\nclass Infobox extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"infobox\">\r\n        {this.props.info.map((info) =>\r\n          <div> {info} <br /> </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Info(props){\r\n  return <div> {props.text} <br /> </div>\r\n}\r\n\r\nexport default Infobox\r\n","import { connect } from 'react-redux'\r\nimport { sendInfo } from '../actions'\r\nimport Infobox from '../components/Infobox'\r\n\r\nconst mapStateToProps = state => ({\r\n  info: state.info.info,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  sendInfo,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Infobox)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n//the tab structure is taken from alligator.io/react/tabs-component/\r\n\r\nclass Tabs extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.instanceOf(Array).isRequired,\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: this.props.children[0].props.label,\r\n    };\r\n  }\r\n  onClickTabItem = (tab) => {\r\n    this.setState({ activeTab: tab });\r\n  }\r\n  render() {\r\n    const {\r\n      onClickTabItem,\r\n      props: {\r\n        children,\r\n      },\r\n      state: {\r\n        activeTab,\r\n      }\r\n    } = this;\r\n\r\n    return (\r\n      <div className=\"tabs\">\r\n        <ul className=\"tab-list\">\r\n          {children.map((child) => {\r\n            const { label } = child.props;\r\n            if (label in this.props.visibleTabs){\r\n              return (\r\n                <Tab\r\n                  activeTab={activeTab}\r\n                  key={label}\r\n                  label={label}\r\n                  name={this.props.visibleTabs[label]}\r\n                  onClick={onClickTabItem}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {children.map((child) => {\r\n            if (child.props.label !== activeTab) return undefined;\r\n            return child.props.children;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass Tab extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  }\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: {\r\n        activeTab,\r\n        label,\r\n      },\r\n    } = this;\r\n    let className = 'tab-list-item';\r\n    if (activeTab === label) {\r\n      className += ' tab-list-active';\r\n    }\r\n    return (\r\n      <li\r\n        className={className}\r\n        onClick={onClick}\r\n      >\r\n        {this.props.name}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs\r\n","import { connect } from 'react-redux'\r\nimport { } from '../../actions'\r\nimport Tabs from '../../components/tabs/Tabs'\r\n\r\nconst mapStateToProps = state => ({\r\n  visibleTabs: state.info.visibleTabs,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tabs)\r\n","import React, { Component } from 'react'\r\n\r\nclass Building extends Component{\r\n  constructor(props){super(props)}\r\n\r\n  build(n){\r\n    var info = this.props.buildings[this.props.name]\r\n    var enoughResources = true\r\n    var enoughBuildings = info.number+n\r\n    for (var resource in info.cost){\r\n      if (info.cost[resource]*n>this.props.resources[resource]){\r\n        enoughResources = false\r\n        this.props.sendInfo('no resources :(')}}\r\n    if (enoughResources & enoughBuildings>0){\r\n      for (resource in info.cost){\r\n        this.props.harvest(resource, -info.cost[resource]*n)\r\n        this.props.sendInfo(' u spent ' + info.cost[resource]*n + ' ' + resource + ' on a ' + this.props.name)\r\n      }\r\n      this.props.build(this.props.name, n)\r\n      this.props.applyEffects(this.props.name, n)\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    if(!(this.props.visibleBuildings.includes(this.props.name))){return <div/>}\r\n    var info = this.props.buildings[this.props.name]\r\n    return(\r\n      <div className = \"menu-item\">\r\n        {this.props.name} ({info.number}): <button className='round' onClick={() => this.build(1)}> + </button> <button className='round' onClick={() => this.build(-1)}> - </button>\r\n        <br />\r\n        <div className = \"menu-item-mouseover\">\r\n          {info.desc} <br />\r\n          cost: <ul>\r\n            {Object.entries(info.cost).map(entry => <li> {entry[0]}: {entry[1]} </li>)} </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Building\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  build,\r\n  harvest,\r\n  addMaxBirbs,\r\n  sendInfo,\r\n  applyEffects} from '../actions'\r\nimport Building from '../components/Building'\r\n\r\nconst mapStateToProps = state => ({\r\n  buildings: state.buildings,\r\n  visibleBuildings: state.info.visibleBuildings,\r\n  resources: state.resources,\r\n  effects: state.effects,\r\n})\r\n\r\n\r\nconst mapDispatchToProps = ({\r\n  build,\r\n  harvest,\r\n  addMaxBirbs,\r\n  sendInfo,\r\n  applyEffects,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Building)\r\n","import React, { Component } from 'react'\r\nimport Building from '../../containers/Building'\r\n\r\n\r\n\r\n\r\nclass HomeTab extends Component{\r\n  constructor(props){super(props);}\r\n\r\n  render(){\r\n    var studyButton = (<div className='menu-item'> <button className='round' onClick={() => this.props.harvest('knowledge', .1)}> + </button> study <br/> </div>)\r\n    if (this.props.info.progression<2){studyButton=<div/>}\r\n    var craftingMenu = (\r\n      <div className=\"menu-crafting\">\r\n        crafting:\r\n        {Object.keys(this.props.info.recipes).map(name =>\r\n          <CraftingLine name={name} info={this.props.info} resources={this.props.resources} harvest={this.props.harvest} sendInfo={this.props.sendInfo}/>)}\r\n      </div>)\r\n    if (!this.props.tech['drawing'].researched){craftingMenu=<div/>}\r\n\r\n    return (\r\n      <div label=\"home\">\r\n        ur at home! <br/>\r\n        <div className=\"menu-smol\">\r\n          <div className='menu-item'> <button className='round' onClick={() => this.props.harvest('bluebs', 1)}> + </button> pick bluebs <br/> </div>\r\n          <div className='menu-item'> <button className='round' onClick={() => this.props.harvest('wood', 1)}> + </button> gather sticks <br/> </div>\r\n          {studyButton}\r\n          <div className='menu-item'> <button className='round' onClick={() => this.props.sendInfo('hi')}> + </button> hi <br/> </div>\r\n        </div>\r\n\r\n        {craftingMenu}\r\n\r\n        <div className=\"menu\">\r\n          buildings:\r\n          {Object.keys(this.props.buildings).map(name =>\r\n            <Building name={name}/>)}\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default HomeTab\r\n\r\nclass CraftingLine extends Component{\r\n  constructor(props){super(props)}\r\n  craft(name, n){\r\n    var info = this.props.info.recipes[name]\r\n    var enoughResources = true\r\n    if (Object.keys(this.props.resources).includes('max'+name)){\r\n      if (this.props.resources[name]+n > this.props.resources['max'+name]){\r\n        n = this.props.resources['max'+name]-this.props.resources[name]}}\r\n    for (var resource in info){\r\n      if (info[resource]*n>this.props.resources[resource]){\r\n        enoughResources=false\r\n        this.props.sendInfo('no resources :(')}}\r\n    if (enoughResources & n>0){\r\n      for(resource in info){\r\n        this.props.harvest(resource, -info[resource]*n)\r\n        this.props.sendInfo('u spent '+ info[resource] + ' ' + resource)}\r\n      this.props.harvest(name, n)}\r\n  }\r\n  render(){\r\n    if(this.props.info.visibleResources.includes(this.props.name)){\r\n      return (\r\n        <div className='menu-item'>\r\n          <button className='round-r' onClick = {()=>this.craft(this.props.name, 1)}> + </button> {this.props.name}\r\n          <div className='menu-item-mouseover'>\r\n            cost: <ul>\r\n              {Object.entries(this.props.info.recipes[this.props.name]).map(entry => <li> {entry[0]}: {entry[1]} </li>)} </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    else{return(<div />)}\r\n  }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  harvest,\r\n  build,\r\n  sendInfo,\r\n  applyEffects,\r\n } from '../../actions'\r\nimport HomeTab from '../../components/tabs/HomeTab'\r\n\r\nconst mapStateToProps = state => ({\r\n  buildings: state.buildings,\r\n  info: state.info,\r\n  resources: state.resources,\r\n  tech: state.tech,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  harvest,\r\n  build,\r\n  sendInfo,\r\n  applyEffects,\r\n}\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomeTab)\r\n","import React, { Component } from 'react'\r\n\r\nclass TownTab extends Component{\r\n  constructor(props){\r\n    super(props);}\r\n  render(){\r\n    var birbs = this.props.resources\r\n    var show = this.props.visibleJobs\r\n    var canEmploy = this.props.tech['training'].researched\r\n    if (canEmploy){\r\n      return (\r\n        <div label=\"home\">\r\n          give ur birbs jobs <br/>\r\n          u currently have {birbs.unemployed} free birbs <br/>\r\n          <div className='menu'>\r\n            jobs:\r\n            <JobLine job='foragers' hire={this.props.hire} birbs={birbs} show={show}/>\r\n            <JobLine job='woodpeckers' hire={this.props.hire} birbs={birbs} show={show}/>\r\n            <JobLine job='scholars' hire={this.props.hire} birbs={birbs} show={show}/>\r\n          </div>\r\n        </div>)}\r\n    else{ return <div> maybe you can train these birbs somehow? </div> }\r\n  }\r\n}\r\n\r\nclass JobLine extends Component{\r\n  constructor(props){super(props)}\r\n  render(){\r\n    if(this.props.show.includes(this.props.job)){\r\n      return (\r\n        <div className = 'menu-item'>\r\n          {this.props.job} ({this.props.birbs[this.props.job]})\r\n          <button className='round-y' onClick={() =>\r\n            this.props.hire(this.props.job, 1)}> + </button>\r\n          <button className='round-y' onClick={() =>\r\n            this.props.hire(this.props.job,-1)}> - </button> <br/>\r\n        </div>\r\n      )}\r\n    else{return(<div />)}\r\n  }\r\n}\r\n\r\nexport default TownTab\r\n","import { connect } from 'react-redux'\r\nimport TownTab from '../../components/tabs/TownTab'\r\nimport {\r\n  hire,\r\n  spawnUnit,\r\n} from '../../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  resources: state.resources,\r\n  visibleJobs: state.info.visibleJobs,\r\n  tech: state.tech\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  hire,\r\n  spawnUnit\r\n}\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TownTab)\r\n","import React, { Component } from 'react'\r\n\r\nclass Map extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.canvasRef = React.createRef();}\r\n\r\n  setupCanvas(canvas){\r\n    // Get the device pixel ratio, falling back to 1.\r\n    var dpr = window.devicePixelRatio || 1;\r\n    var rect = canvas.getBoundingClientRect();\r\n    canvas.width = rect.width * dpr;\r\n    canvas.height = rect.height * dpr;\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.scale(dpr, dpr);\r\n    return ctx;\r\n  }\r\n  renderBackground(ctx, pixSize){\r\n    var map = this.props.map\r\n    map = map[0].map((col, i) => map.map(row => row[i])); //transposes the map cuz im dumb\r\n    ctx.fillStyle= '#ddd'\r\n    ctx.fillRect(-1000, -1000, 2000, 2000);\r\n    for (var row = 0; row < map.length; row++) {\r\n      for (var col = 0; col < map[0].length; col++) {\r\n        switch (map[row][col]){\r\n          case 0:\r\n            ctx.fillStyle = '#85ff3f'; break;\r\n          case 1:\r\n            ctx.fillStyle = '#54afff'; break;\r\n          case 2:\r\n            ctx.fillStyle = '#d64017'; break;\r\n          case 3:\r\n            ctx.fillStyle = '#959699'; break;\r\n          case 4:\r\n            ctx.fillStyle = '#1cb525'; break;\r\n          default:\r\n            ctx.fillStyle = '#fff'; break;}\r\n        ctx.fillRect(pixSize*row+this.props.corner[1], pixSize*col+this.props.corner[0], pixSize, pixSize);\r\n  }}}\r\n  renderUnits(ctx, pixSize){\r\n    ctx.fillStyle= '#42b3f5';\r\n    for (var unit in this.props.units){\r\n      var unit = this.props.units[unit]\r\n      ctx.beginPath();\r\n      ctx.arc(pixSize*unit.location[0]+this.props.corner[1], pixSize*unit.location[1]+this.props.corner[0], pixSize/5, 0, 6.28);\r\n      ctx.lineWidth=pixSize/10;\r\n      ctx.stroke()\r\n      ctx.fill()\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    const canvas = this.canvasRef.current;\r\n    var ctx = canvas.getContext('2d');\r\n    const pixSize = this.props.pixSize;\r\n    this.renderBackground(ctx, pixSize);\r\n    this.renderUnits(ctx, pixSize);}\r\n  componentDidUpdate(){\r\n    const canvas = this.canvasRef.current;\r\n    var ctx = canvas.getContext('2d');\r\n    const pixSize = this.props.pixSize;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //get rid of this later so u dont have to redraw everything\r\n    this.renderBackground(ctx, pixSize);\r\n    this.renderUnits(ctx, pixSize);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className='map'>\r\n        <canvas ref={this.canvasRef} width=\"240\" height=\"240\"/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map\r\n","import { connect } from 'react-redux'\r\nimport { sendInfo} from '../actions'\r\nimport Map from '../components/Map'\r\n\r\nconst mapStateToProps = state => ({\r\n  map: state.info.map,\r\n  units: state.units,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  sendInfo,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Map)\r\n","import React, { Component } from 'react'\r\nimport Map from '../../containers/Map'\r\n\r\nclass MapTab extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {zoom: 3, pixSize: 12, corner: [0, 0]}}\r\n\r\n\r\n  spawnUnit(){\r\n    this.props.spawnUnit('borb', 'bluebirb', 'unemployed', [3.5, 6.5])}\r\n  sendUnitInfo(n){\r\n    if (n >= this.props.units.length | n<0){return this.props.sendInfo('unit ' + n + \" doesn't exist\")}\r\n    const unit = this.props.units[n]\r\n    return this.props.sendInfo(unit.name + ' the ' + unit.species + ' ' + unit.job + ' has id ' + n + ' and location ' + unit.location)\r\n  }\r\n  zoom(n){\r\n    const zoomDict = {7:2, 6:4, 5:6, 4:8, 3:12, 2:20, 1:28, 0:36}\r\n    if (this.state.zoom+n>=0 & this.state.zoom+n<=7){\r\n      this.setState({zoom: this.state.zoom+n, pixSize: zoomDict[this.state.zoom+n]})}}\r\n  move(x, y){\r\n    this.setState({corner: [this.state.corner[0]+x*20, this.state.corner[1]+y*20]})} //20 is the number of pixels the map shifting shifts by\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        its a map! <br />\r\n        zoom: <button className = 'round-g' onClick={() => this.zoom(-1)}> + </button>\r\n        <button className = 'round-g' onClick={() => this.zoom(1)}> - </button> <br/>\r\n        shift: <br/>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <button className = 'round-g' onClick={() => this.move(1, 0)}> &uarr; </button> <br/>\r\n        <button className = 'round-g' onClick={() => this.move(0, 1)}> &larr; </button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <button className = 'round-g' onClick={() => this.move(0, -1)}> &rarr; </button> <br/>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <button className = 'round-g' onClick={() => this.move(-1, 0)}> &darr; </button>\r\n        <Map pixSize={this.state.pixSize} corner={this.state.corner} /> <br />\r\n        spawn a borb: <button className='round-g' onClick={() => this.spawnUnit()}> + </button> <br/>\r\n        see info about last borb: <button className='round-g' onClick={() => this.sendUnitInfo(this.props.units.length-1)} /> <br/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapTab\r\n","import { connect } from 'react-redux'\r\nimport MapTab from '../../components/tabs/MapTab'\r\nimport {\r\n  addMap,\r\n  spawnUnit,\r\n  sendInfo,\r\n} from '../../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  map: state.info.map,\r\n  units: state.units,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  addMap,\r\n  spawnUnit,\r\n  sendInfo,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MapTab)\r\n","import ScienceTab from '../containers/tabs/ScienceTab'\r\nimport React, {Component} from 'react'\r\n\r\nclass Tech extends Component{\r\n  constructor(props){\r\n    super(props);}\r\n\r\n  getPath(parentCoords, coords){\r\n    const vertDist = coords[1]-parentCoords[1]-14 //subtract 14 to make room for the curvy parts\r\n    const horizDist = parentCoords[0]-coords[0]\r\n    var path\r\n\r\n      path = 'm'+(coords[0]+45)+' '+ (coords[1]+18) + 'v -7 '\r\n      path += 'c 0 0 ' + 0 + ' ' + -vertDist/2 + ' ' + horizDist/2 + ' ' + -vertDist/2\r\n      path += 'c 0 0 ' + horizDist/2 + ' ' + 0 + ' ' + horizDist/2 + ' ' + -vertDist/2\r\n      path += 'v -7'\r\n    return path\r\n  }\r\n  selectTech(name){\r\n    this.props.selectTech(name)}\r\n\r\n  render(){\r\n    const name = this.props.name\r\n    const tech = this.props.techList[name]\r\n    if(!name){return(<div> got a null tech </div>)}\r\n    var paths = []\r\n    var display = false\r\n    if (tech.parents.length==0){display=true}\r\n    for (var parentName of tech.parents){\r\n      const parent = this.props.techList[parentName]\r\n      if (!parent){\r\n        console.log('unknown parent' + parentName)}\r\n      paths.push(this.getPath(parent.position, tech.position))\r\n      if (parent.researched){\r\n        display = true}}\r\n    var buttonToRender = ''\r\n    if (display | tech.researched){\r\n      if (tech.researched){\r\n        buttonToRender=<button className='tech-researched' onClick={() => this.selectTech(name)}> {name} </button>}\r\n      else{\r\n        buttonToRender=<button className='tech' onClick={() => this.selectTech(name)}> {name} </button>}}\r\n    else{\r\n      buttonToRender=<div />\r\n      paths=[]}\r\n\r\n    const coordsHtml = {left: tech.position[0], top: tech.position[1]}\r\n    return(\r\n      <div>\r\n        <div className='lines'><svg height='600px' width='600px'>\r\n          {paths.map(path => <path d={path} className='line'/> )}\r\n\r\n        </svg></div>\r\n        <div className='tech-wrapper' style={coordsHtml}> {buttonToRender} </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tech\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  sendInfo,\r\n  selectTech,\r\n} from '../actions'\r\nimport Tech from '../components/Tech'\r\n\r\nconst mapStateToProps = state => ({\r\n  techList: state.tech,\r\n  info: state.info,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  sendInfo,\r\n  selectTech,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tech)\r\n","import React, { Component } from 'react'\r\nimport Tech from '../../containers/Tech'\r\nimport Tree from 'react-d3-tree';\r\n\r\nclass ScienceTab extends Component{\r\n  constructor(props){super(props); }\r\n\r\n  research(selected){\r\n    var info = this.props.tech[selected]\r\n    var enoughResources = true\r\n    var prereqsSatisfied = true\r\n    for (var resource in info.cost){\r\n      if (info.cost[resource]>this.props.resources[resource]){\r\n        enoughResources=false\r\n        this.props.sendInfo('no resources :(')}}\r\n    for (var parent in info.parents){\r\n      if (!this.props.tech[info.parents[parent]].researched){\r\n        prereqsSatisfied=false\r\n        this.props.sendInfo('previous techs not researched yet :(')}}\r\n    if (enoughResources & prereqsSatisfied){\r\n      for(resource in info.cost){\r\n        this.props.harvest(resource, -info.cost[resource])\r\n        this.props.sendInfo('u spent '+ info.cost[resource] + ' ' + resource)}\r\n      this.props.research(selected)\r\n      console.log(selected)\r\n      switch (selected){\r\n        case 'training':\r\n          //this is checked for by the other end\r\n          break\r\n        case 'teaching':\r\n          this.props.addJob('scholars')\r\n          break\r\n        case 'woodworking':\r\n          this.props.addResource('boxes')\r\n          break\r\n        case 'fire':\r\n          this.props.addBuilding('campfire')\r\n          this.props.addTab('town', 'settlement')\r\n          break\r\n        case 'digging':\r\n          this.props.addResource('clay')\r\n          this.props.addResource('stone')\r\n          break\r\n        case 'drawing':\r\n          this.props.addResource('drawings')\r\n          break\r\n        case 'writing':\r\n          this.props.addResource('books')\r\n          break\r\n        case 'cartography':\r\n          this.props.addTab('map', 'map')\r\n          break\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  displaySelected(){\r\n    var selected = this.props.info.selectedTech\r\n    var selectedTech = this.props.tech[selected]\r\n    var displayResearch\r\n    if (selectedTech.researched){\r\n      displayResearch = <div>{\"researched\"}<br/></div> }\r\n    else{\r\n      displayResearch = <div>{\"research?\"} <button className='round' onClick={() => this.research(selected)}> </button> <br/> </div> }\r\n    return (\r\n      <div>\r\n        <h2>{selected}</h2>\r\n        {selectedTech.description}<br/>\r\n        cost:\r\n          {Object.keys(selectedTech.cost).map(resource => <h4>&nbsp;&nbsp;{resource + ' '+ selectedTech.cost[resource]} </h4> )}\r\n        {displayResearch} <br/>\r\n      </div>\r\n    )\r\n  }\r\n  render(){\r\n    const techList = this.props.tech\r\n    const techObjectsList = Object.keys(techList).map(\r\n      name => <Tech name={name} techList={techList} research={this.props.research}/> )\r\n    return (\r\n      <div label=\"science\">\r\n        <div className=\"tree-wrapper\">\r\n          {techObjectsList}</div>\r\n        <div className=\"tech-info\">\r\n          {this.displaySelected()} </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ScienceTab\r\n","import { connect } from 'react-redux'\r\nimport ScienceTab from '../../components/tabs/ScienceTab'\r\nimport {\r\n  research,\r\n  harvest,\r\n  sendInfo,\r\n  addMap,\r\n  addTab,\r\n  addBuilding,\r\n  addResource,\r\n  addJob,\r\n} from '../../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech,\r\n  resources: state.resources,\r\n  info: state.info,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  research,\r\n  harvest,\r\n  sendInfo,\r\n  addMap,\r\n  addTab,\r\n  addBuilding,\r\n  addResource,\r\n  addJob,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ScienceTab)\r\n","import React from 'react';\nimport './App.scss';\n\nimport Sidebar from '../containers/Sidebar'\nimport Infobox from '../containers/Infobox'\nimport Tabs from '../containers/tabs/VisibleTabs.js'\nimport HomeTab from '../containers/tabs/HomeTab.js'\nimport TownTab from '../containers/tabs/TownTab.js'\nimport MapTab from '../containers/tabs/MapTab.js'\nimport ScienceTab from '../containers/tabs/ScienceTab.js'\n\nimport {initState} from '../initialState.js'\nvar getStuff = require('../modules/getStuff.js');\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.counter = 1\n    this.state = {daylength: 0, time: 0}\n    this.props.applyEffects('base', 1)\n    this.props.sendInfo('there are also a lot of blueb bushs to eat.')\n    this.props.sendInfo('you look around and see lots of birbs flying around.')\n    this.props.sendInfo('you wake up in a grassy field...')\n    this.props.addMap(\n         [[3, 3, 0, 1, 1, 1, 1, 1, 0, 0, 3, 3, 3, 4, 0, 0, 0, 0, 0, 1],\n          [3, 3, 0, 1, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 4, 4, 0, 0, 0, 0],\n          [3, 3, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 4, 0, 0, 0, 0],\n          [3, 4, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0],\n          [3, 4, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0],\n          [3, 4, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 3, 3, 0, 3, 0, 0, 0, 0],\n          [4, 0, 0, 2, 0, 0, 1, 1, 1, 1, 1, 0, 3, 3, 0, 3, 0, 0, 0, 0],\n          [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 3, 3, 3, 3, 0, 0, 0],\n          [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 3, 3, 3, 3, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 3, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 3, 3, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 3, 3, 3, 0, 0],\n          [4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 3, 3, 0, 0],\n          [4, 4, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 0, 0],\n          [4, 4, 0, 0, 0, 4, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 3, 3, 0, 0],\n          [4, 4, 4, 0, 4, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 4, 0, 3, 3],\n          [4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 1, 1, 0, 0, 0, 4, 0, 0, 0, 3],\n          [4, 4, 0, 0, 0, 0, 4, 0, 0, 1, 1, 1, 0, 0, 0, 4, 4, 0, 0, 3],\n          [4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 3, 4, 0, 0], ])\n    this.unlockEverything();\n    //this.load('startup')\n  }\n\n  unlockEverything(){ //for debugging ez\n    this.props.setProgression(3)\n    this.props.addTab('town', 'settlement')\n    this.props.addTab('science', 'study')\n    this.props.addResource('birbs')\n    this.props.addResource('knowledge')\n    this.props.harvest('knowledge', 50000)\n  }\n\n  componentDidMount(){\n    this.timerID = setInterval(() => this.tick(), 100)}\n  tick(){\n    //in game time change\n    if (this.counter%5==0){\n      var newTime = new Date().getTime()\n      this.setState({dayLength: (newTime - this.state.time), time: newTime})\n      this.props.tick()}\n\n    //early game (pre-science) progress tracking\n    if (this.props.info.progression<3 & this.counter%50==0){\n      if (this.props.info.progression==0){\n        if (this.props.buildings['nest'].number>0 & this.props.resources['bluebs']>1){\n          this.props.setProgression(1)\n          this.props.addTab('town', 'birb tree')\n          this.props.addResource('birbs')\n          this.props.adoptBirb(1);\n          this.props.spawnUnit('borb', 'unemployed', 'unemployed', [3.5, 6.5])\n          this.props.sendInfo('a birb lands in ur nest! maybe you can be friends? maybe other birbs will come too?')}}\n      if (this.props.info.progression==1){\n        if (this.props.resources['birbs']>=3){\n          this.props.setProgression(2)\n          this.props.addResource('knowledge')\n          this.props.sendInfo('maybe you can learn how to do more things if u study.')}}\n      if (this.props.info.progression==2){\n        if (this.props.resources['knowledge']>5){\n          this.props.setProgression(3)\n          this.props.addTab('science', 'study')}}}\n    //borb inflow and outflow\n    if (this.counter%20==0 & this.props.info.progression>0){\n      if ((Math.random()<.1+(.1*(this.props.resources['maxbirbs']-this.props.resources['birbs'])))&(this.props.resources['bluebs']>1)){\n        this.props.adoptBirb(1);}\n      if ((this.props.resources['bluebs']<1) & (this.props.resources['birbs']>0) & (Math.random()<.5)){\n        var hunger = this.props.info.hunger\n        if(hunger==0){\n          if(this.props.info.progression<1){\n            this.props.sendInfo(\"your borbs are hungery.... feed them or they'll fly away!!\")}\n          else{\n            (this.props.sendInfo(\"your borbs are hungery... \"))}}\n        this.props.setHunger(hunger + 1)\n        if(hunger>4){\n          this.props.sendInfo(\"a borb flew away :(\")\n          this.props.adoptBirb(-1);\n          if(this.props.resources['woodpeckers']>0){this.props.hire('woodpeckers', -1)}\n          else if (this.props.resources['scholars']>0){this.props.hire('scholars', -1)}\n          else {this.props.hire('farmers', -1)}\n          this.props.setHunger(0)}}}\n    //unit moving\n    if (this.counter%2==0){\n      for (const unit in this.props.units){\n        this.props.moveUnit(unit, (Math.random()-.5)*.2, (Math.random()-.5)*.2)}}\n    //income\n    if (this.counter%1==0){\n      for (const incomeGenerator of Object.keys(this.props.effects.income)){\n        this.props.income(incomeGenerator, getStuff.getNum(incomeGenerator, this.props.buildings, this.props.resources, this.props.tech))}}\n    if (this.counter%200==0){\n      this.save('autosave')}\n    if (this.counter%200==0 & Math.random()<.01){this.props.sendInfo('a borb c h o r p s')}\n    this.counter = (this.counter+1)%1200\n  }\n\n  load(whence){\n    try{\n      const inState = JSON.parse(localStorage.getItem('state'))\n      if (inState!= null){\n        if(inState['resources']['maxbluebs']!=0){\n          this.props.load()}}\n      else {if(whence=='button'){this.props.sendInfo('no save state found :c')}}}\n    catch (err) {if(whence=='button'){this.props.sendInfo('no save state found :/')}}}\n  save(whence){\n    localStorage.setItem('state', JSON.stringify(this.props.state))\n    if(whence=='button'){this.props.sendInfo('saved!') }\n    //if(whence=='autosave'){this.props.sendInfo('autosaved!') }\n    if(whence=='reset'){\n      localStorage.setItem('state', undefined)\n      this.props.sendInfo('reset successful! refresh the page to start from nothing (or click save right now if you want to cancel the reset!!)')\n      console.log(localStorage.getItem('state'))}\n  }\n  render(){\n    return (\n      <div>\n        <Sidebar/>\n        <div className='not-sidebar'>\n          <div className='header'>\n            <h3>{this.state.dayLength}\n              <button className='save-button' onClick={() => this.save('button')}> save </button>\n              <button className='save-button' onClick={() => this.load('button')}> load </button>\n              <button className='save-button' onClick={() => this.save('reset')}> hard reset </button>\n            </h3>\n            <h1>bluebs game </h1>\n          </div>\n          <Tabs\n            visibleTabs = {this.props.info.visibleTabs}>\n            <div label='home'>\n              <HomeTab/> </div>\n            <div label=\"town\">\n              <TownTab/> </div>\n            <div label=\"science\">\n              <ScienceTab /> </div>\n            <div label=\"map\">\n              <MapTab /></div>\n          </Tabs>\n        <Infobox />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux'\r\nimport App from '../components/App'\r\n\r\n\r\nimport {\r\n  harvest,\r\n  build,\r\n  adoptBirb,\r\n  set,\r\n  sendInfo,\r\n  tick,\r\n  addTab,\r\n  addResource,\r\n  addMap,\r\n  addBuilding,\r\n  moveUnit,\r\n  spawnUnit,\r\n  income,\r\n  applyEffects,\r\n  setHunger,\r\n  setProgression,\r\n  research,\r\n  hire,\r\n  load,\r\n} from '../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  state: state,\r\n  resources: state.resources,\r\n  buildings: state.buildings,\r\n  info: state.info,\r\n  units: state.units,\r\n  tech: state.tech,\r\n  effects: state.effects,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  harvest,\r\n  build,\r\n  adoptBirb,\r\n  set,\r\n  sendInfo,\r\n  tick,\r\n  addTab,\r\n  addResource,\r\n  addMap,\r\n  addBuilding,\r\n  moveUnit,\r\n  spawnUnit,\r\n  income,\r\n  applyEffects,\r\n  setHunger,\r\n  setProgression,\r\n  research,\r\n  hire,\r\n  load,\r\n}\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n","import update from 'react-addons-update'\r\n\r\nconst resources = (state = [], action) => {\r\n  switch (action.type) {\r\n\r\n    case 'SET':\r\n      return update(state, {[action.name]: {$set: action.n}})\r\n\r\n    case 'ADOPT_BIRB':\r\n      if (state['birbs'] <= state['maxbirbs']-action.n){\r\n        return {...state,\r\n          ['birbs']: state['birbs']+action.n,\r\n          ['unemployed']: state['unemployed']+action.n,}}\r\n      else {return state}\r\n    case 'HIRE':\r\n      var j = state[action.name]+action.n\r\n      if ((state.unemployed >= action.n) & (action.n+state[action.name]>=0)){\r\n        return update(state, {\r\n          [action.name]: {$set: j},\r\n          'unemployed': {$set: state['unemployed']-action.n}})}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default resources\r\n","import update from 'react-addons-update'\r\n\r\n\r\nconst info = (state = [], action) => {\r\n  switch (action.type) {\r\n\r\n    //these add functions are just to make things visible as u unlock them in the game\r\n    case 'ADD_TAB':\r\n      return update(state, {visibleTabs: {[action.key]: {$set: action.name}}})\r\n    case 'ADD_RESOURCE':\r\n      if (!(action.name in state.visibleResources)){\r\n        return Object.assign({}, state, {\r\n          visibleResources: state.visibleResources.concat(action.name)})}\r\n      else{return state}\r\n    case 'ADD_JOB':\r\n      if (!(action.name in state.visibleJobs)){\r\n        return Object.assign({}, state, {\r\n          visibleJobs: state.visibleJobs.concat(action.name)})}\r\n      else{return state}\r\n    case 'ADD_MAP':\r\n      return {...state, map:action.map}\r\n    case 'ADD_BUILDING':\r\n      return update(state, {visibleBuildings: {$push: [action.name]}})\r\n    case 'SELECT_TECH':\r\n      return {...state, selectedTech:action.name}\r\n\r\n    case 'TICK':\r\n      var season = state.time[0]\r\n      var day = state.time[1]\r\n      var hour = state.time[2] + 1\r\n      const nextSeasonDict = {'spring':'summer', 'summer':'fall', 'fall':'winter', 'winter':'spring'}\r\n      if(hour>=24){\r\n        hour=0\r\n        day=day+1}\r\n      if(day>=31){\r\n        day=1\r\n        season=nextSeasonDict[season]}\r\n      return {...state,\r\n        time: [season, day, hour]}\r\n    case 'SEND_INFO':\r\n      if (state.info > 100){\r\n        state.info.pop()}\r\n      return Object.assign({}, state, {\r\n        info: [action.info].concat(state.info)})\r\n    case 'SET_PROGRESSION':\r\n      return update(state, {progression: {$set: action.n}})\r\n    case 'SET_HUNGER':\r\n      return update(state, {hunger: {$set: action.n}})\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default info\r\n","\r\nimport update from 'react-addons-update'\r\n\r\nconst buildings = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'BUILD':\r\n      const newNum = state[action.name].number+action.n\r\n      return update(state, {[action.name]: {number: {$set: newNum}}})\r\n    default:\r\n      return state\r\n    }\r\n  }\r\n\r\nexport default buildings\r\n","import update from 'react-addons-update'\r\n\r\nconst units = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'SPAWN_UNIT':\r\n      var newUnit = {\r\n        id: action.id,\r\n        name: action.name,\r\n        species: action.species,\r\n        job: action.job,\r\n        location: action.location};\r\n      return [...state, newUnit]\r\n    case 'MOVE_UNIT':\r\n      const newLoc = [action.x + state[action.id].location[0], action.y + state[action.id].location[1]]\r\n      return update(state, {[action.id]: {location: {$set: newLoc}}})\r\n    default:\r\n      return state\r\n    }\r\n  }\r\n\r\nexport default units\r\n","import update from 'react-addons-update'\r\n\r\nconst tech = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'RESEARCH':\r\n      return update(state, {[action.name]: {researched: {$set: 1}}})\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default tech\r\n","import update from 'react-addons-update'\r\n\r\nconst effects = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_EFFECT':\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default effects\r\n","import update from 'react-addons-update'\r\n\r\nexport var applyEffects = (resources, effects, name, n) => { //why do i have to use arrow notation here???\r\n  var newResources = Object.assign({}, resources)\r\n  var effects = effects.constant[name]\r\n  for (var target of Object.keys(effects)){\r\n    for (var resource of Object.keys(resources)){ //only affects resources\r\n      if(resource==target){\r\n        newResources[resource] += effects[target]*n}}}\r\n  return newResources}\r\n\r\nconst bigReducers = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'APPLY_EFFECTS': //to be called on the creation of a generator (ex: building or research)\r\n      return {...state, resources: applyEffects(state.resources, state.effects, action.name, action.n)}\r\n    case 'APPLY_MODIFIERS':\r\n      return state\r\n\r\n      /*so modifers should act on something like 'box storage of wood +20%' or 'box storage of everything +20%'\r\n      or 'woodpecker income of wood 20%'\r\n      or 'everything affecting blueb income +20%'\r\n      so they need to have the shape {name, target, income, constant, percentage change}\r\n      and to apply a modifier... for a specific name/target pair.. lets say\r\n        libraries give 10% bonus income to knowledge\r\n        we have 4 libraries and 1 otehr bldng giving 20%. so the current bonus is 60%\r\n        current knowledge income is 100 so the bonused income is 160%\r\n        well i guess for income we could just calculate it every time we income.\r\n      so its really just for effects...... uh......\r\n        lets say libraries give 10% bonus knowledgecap\r\n        we have 4 libraries and 1 other bldng giving 20%, so current bonus is 1.4*1.2 again\r\n        current knowledgecap is 100 so bonused cap is like 1.68\r\n        and so for adding another library we just negative apply 4 library effects... then apply 5.\r\n        so that means dividing by 1.4 and then multiplying by 1.5. */\r\n\r\n\r\n    case 'INCOME': //only incomes resources\r\n      var newResources = Object.assign({}, state.resources)\r\n      var incomes = state.effects.income[action.name]\r\n      for (var target of Object.keys(incomes)){\r\n        for (var resource of Object.keys(state.resources)){\r\n          if(resource==target){\r\n            const current = state.resources[resource]\r\n            var max = 10000000000000\r\n            var amount=action.n*incomes[target]\r\n            if('max'+resource in state.resources){\r\n              max = state.resources['max'+resource]}\r\n            newResources[resource]=current+amount\r\n            if(current+amount<=0){\r\n              newResources[resource] = 0}\r\n            if(current+amount>max){\r\n              newResources[resource] = max}\r\n            var resourceChange = newResources[resource]-state.resources[resource]\r\n            if (Object.keys(state.effects.constant).includes(resource) & resourceChange!=0){\r\n              newResources = applyEffects(newResources, state.effects, resource, resourceChange)\r\n            }}}}\r\n      return {...state, resources: newResources}\r\n    case 'HARVEST':\r\n      const current = state.resources[action.name]\r\n      var max = 10000000000000\r\n      if('max'+action.name in Object.keys(state)){\r\n        max = state.resources['max'+action.name]}\r\n      var newResource=current+action.n\r\n      if(newResource<=0){\r\n        newResource = 0}\r\n      if(newResource>max){\r\n        newResource = max}\r\n      var resourceChange = newResource-state.resources[action.name]\r\n      var newResources = Object.assign({}, state.resources)\r\n      newResources[action.name]=newResource\r\n      if (Object.keys(state.effects.constant).includes(action.name) & resourceChange!=0){\r\n        newResources = applyEffects(newResources, state.effects, action.name, resourceChange)}\r\n      return {...state, resources: newResources}\r\n    case 'LOAD':\r\n      return JSON.parse(localStorage.getItem('state'));\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default bigReducers\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n","import { combineReducers } from 'redux'\r\nimport reduceReducers from 'reduce-reducers'\r\nimport resources from './resources'\r\nimport info from './info'\r\nimport buildings from './buildings'\r\nimport units from './units'\r\nimport tech from './tech'\r\nimport effects from './effects'\r\n\r\n//reducers that mess with entire state go in here\r\nimport bigReducers from './bigReducers'\r\n\r\n//reducers that mess with one slice of state go in these children reducer files\r\nconst smolReducers = combineReducers({\r\n  resources,\r\n  info,\r\n  buildings,\r\n  units,\r\n  tech,\r\n  effects,\r\n})\r\n\r\nconst rootReducer = reduceReducers(\r\n  smolReducers,\r\n  bigReducers)\r\n\r\nexport default rootReducer\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nimport {initState} from './initialState.js'\n\n\n\n\nconst container = document.createElement('div');\ndocument.body.appendChild(container)\n\nvar state = Object.assign({}, initState)\nconst store = createStore(rootReducer, state)\n\nrender(\n  <Provider store={store}>\n    <head>\n      <meta name=\"viewport\"\n        content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"/>\n    </head>\n    <body>\n      <App/>\n    </body>\n  </Provider>,\n  container\n)\n\n\n\n//import * as serviceWorker from './serviceWorker';\n//serviceWorker.unregister(); note i deleted the serviceworker\n","\r\nexport {initState}\r\nconst initState = {\r\n  resources: {\r\n    'bluebs': 0,\r\n    'wood': 0,\r\n    'clay': 0,\r\n    'stone': 0,\r\n    'knowledge': 0,\r\n    'books': 0,\r\n    'drawings': 0,\r\n    'boxes': 0,\r\n\r\n    'maxbluebs': 0,\r\n    'maxwood': 0,\r\n    'maxclay': 0,\r\n    'maxstone': 0,\r\n    'maxknowledge': 0,\r\n    'maxbooks': 0,\r\n    'maxdrawings': 0,\r\n    'maxboxes': 0,\r\n\r\n    'birbs': 0,\r\n    'maxbirbs': 0,\r\n    'unemployed': 0,\r\n    'foragers': 0,\r\n    'woodpeckers': 0,\r\n    'scholars': 0,\r\n  },\r\n\r\n  buildings: {\r\n    'base':{\r\n      number: 1,\r\n      desc: \"ur tent! (wait, u shouldn't be seeing this...)\",\r\n      cost: {},},\r\n    'nest':{\r\n      number: 0,\r\n      desc: 'a little home for two birbs to live',\r\n      cost: {'wood':10,},},\r\n    'birbhouse':{\r\n      number: 0,\r\n      desc: 'space for four birbs to live!' ,\r\n      cost: {'wood':30},},\r\n    'campfire':{\r\n      number: 0,\r\n      desc: 'keeps u and ur birbs warm and happy',\r\n      cost: {'wood':20},},\r\n    'library':{\r\n      number: 0,\r\n      desc: 'place to store all ur drawings and books!',\r\n      cost: {'wood':30} ,},\r\n  },\r\n\r\n  info: {\r\n    visibleTabs: {\r\n      'home': 'tent', },\r\n    visibleResources:[\r\n      'bluebs',\r\n      'wood',],\r\n    visibleJobs:[\r\n      'woodpeckers',\r\n      'foragers',],\r\n    visibleBuildings:[\r\n      'nest',],\r\n    info: [],\r\n    time: ['spring', 1, 1],\r\n    map: [],\r\n    selectedTech: 'studying',\r\n    happiness: 1.00,\r\n    progression: 0,\r\n    hunger: 0,\r\n    recipes: {\r\n      'boxes': {'wood': 50},\r\n      'drawings': {},\r\n      'books': {'wood': 1, 'bluebs': 1},\r\n\r\n    }\r\n  },\r\n\r\n  units: [],\r\n\r\n  tech:{\r\n    'studying': {position: [150, 0], researched: 0, parents: [], children: ['training', 'woodworking'],\r\n      description: 'learn new things about the world!', cost:{'knowledge': 2}},\r\n    'training': {position: [200, 40], researched: 0, parents: ['studying'], children: ['teaching'],\r\n      description: 'teach ur birbs tricks!', cost:{'knowledge':5}},\r\n    'teaching': {position: [250, 80], researched: 0, parents: ['training'], children: ['drawing'],\r\n      description: 'maybe ur birbs can learn on their own?', cost:{'knowledge':10}},\r\n    'drawing': {position: [240, 120], researched: 0, parents: ['teaching'], children: ['writing'],\r\n      description: 'draw with stick to remember things', cost: {'knowledge': 30}},\r\n\r\n    'woodworking': {position: [100, 50], researched: 0, parents: ['studying'], children: ['digging', 'fire', 'construction'],\r\n      description: 'carve fun things', cost:{'knowledge':10} },\r\n    'digging': {position: [60, 100], researched: 0, parents: ['woodworking'], children: ['pottery'],\r\n      description: 'there r all sorts of things in the ground...', cost: {'knowledge': 40}},\r\n    'fire': {position: [150, 100], researched: 0, parents: ['woodworking'], children: ['pottery'],\r\n      description: 'hot!', cost: {'knowledge': 30}},\r\n    'pottery': {position: [130, 135], researched: 0, parents: ['digging', 'fire'], children: [],\r\n      description: 'pots to hold things', cost: {'knowledge': 30}},\r\n    'construction': {position: [10, 70], researched: 0, parents: ['woodworking'], children: [],\r\n      description: 'build birb houses that can hold more birbs... and maybe more :o', cost:{'knowledge': 100}},\r\n\r\n    'math': {position: [260, 160], researched: 0, parents: ['drawing'], children: ['cartography'],\r\n      description: 'think about numbers n stuf.. ', cost:{'knowledge': 20}},\r\n    'writing': {position: [180, 160], researched: 0, parents:['drawing'], children: ['cartography'],\r\n      description: 'draw with stick to remember things', cost: {'knowledge': 10}},\r\n    'cartography': {position: [250, 200], researched: 0, parents:['writing', 'math'], children: [],\r\n      description: 'doodle a map', cost: {'knowledge': 10}},\r\n    'exploration': {position: [260, 240], researched: 0, parents:['cartography'], children: [],\r\n      description: 'send ur birbs on an adventure!', cost: {'knowledge': 30}},\r\n  },\r\n\r\n  effects: {\r\n    constant: {\r\n      'base': {'maxbluebs': 100,\r\n               'maxwood': 100,\r\n               'maxknowledge': 50000000,\r\n               'maxdrawings': 10,\r\n               'maxbooks': 3,},\r\n      'nest': {'maxbirbs': 2},\r\n      'birbhouse': {'maxbirbs': 4},\r\n      'library': {'maxbooks':20,\r\n                  'maxdrawings': 20},\r\n      'boxes': {'maxwood': 100,\r\n              'maxbluebs': 100,\r\n              'maxclay': 40,\r\n              maxstone: 20,},\r\n      'drawings': {'maxknowledge': .1},\r\n      'books': {'maxknowledge': 1},\r\n    },\r\n    income: {\r\n      'birbs': {'bluebs': -.005},\r\n      'foragers': {\"bluebs\": .05},\r\n      'woodpeckers': {'wood': .05},\r\n      'scholars': {'knowledge': .003},\r\n    },\r\n    modifiers: {\r\n\r\n    }\r\n  },\r\n\r\n}\r\n"],"sourceRoot":""}