{"version":3,"sources":["modules/getStuff.js","actions/index.js","components/Sidebar.js","containers/Sidebar.js","components/Infobox.js","containers/Infobox.js","components/tabs/Tabs.js","containers/tabs/VisibleTabs.js","components/Building.js","containers/Building.js","components/tabs/HomeTab.js","containers/tabs/HomeTab.js","components/tabs/TownTab.js","containers/tabs/TownTab.js","components/Map.js","containers/Map.js","components/tabs/MapTab.js","containers/tabs/MapTab.js","components/Tech.js","containers/Tech.js","components/tabs/ScienceTab.js","containers/tabs/ScienceTab.js","components/App.js","containers/App.js","reducers/resources.js","reducers/info.js","reducers/buildings.js","reducers/units.js","reducers/tech.js","reducers/effects.js","reducers/bigReducers.js","reducers/index.js","index.js","initialState.js"],"names":["exports","module","getNum","target","value","buildings","arguments","length","undefined","resources","tech","_i","_Object$keys","Object","keys","name","_i2","_Object$keys2","_i3","_Object$keys3","getValue","researched","number","round","n","toFixed","parseFloat","Math","abs","sendInfo","info","type","addTab","key","addResource","addBuilding","build","harvest","hire","idCounter","spawnUnit","species","job","location","id","selectTile","coordinates","makeTile","details","research","applyEffects","applyModifiers","getStuff","require","Sidebar","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","effects","_this","out","maxTarget","income","generator","overallEffect","constant","modifiers","modifers","incomeDetails","map","react_default","a","createElement","className","effectsDetails","maxDetails","totalIncome","values","reduce","b","incomeOut","totalEffects","effectsOut","totalMax","maxOut","_this2","show","visibleResources","res","seasonalBar","time","ResourceLine","getEffects","Component","Sidebar_Resource","max","Resource","birbs","bluebs","wood","knowledge","clay","stone","happiness","ceramic","mouseover","color","colorDict","includes","style","connect","state","techs","Infobox","index","mapDispatchToProps","Tabs","onClickTabItem","tab","setState","activeTab","children","label","child","visibleTabs","Tabs_Tab","onClick","Tab","_this3$props","_this3","_this$props","Building","enoughResources","enoughBuildings","resource","cost","pow","costRatio","i","incrementCost","visibleBuildings","desc","entries","entry","addMaxBirbs","HomeTab","studyButton","progression","craftingMenu","recipes","HomeTab_CraftingLine","random","containers_Building","CraftingLine","craft","TownTab","visibleJobs","unemployed","TownTab_JobLine","JobLine","effectsToDisplay","push","Map","canvasRef","React","createRef","ctx","pixSize","lowerXToRender","floor","corner","higherXToRender","lowerYToRender","higherYToRender","fillStyle","fillRect","tiles","x","y","toString","generateTile","console","log","tile","pos","tileTypes","typeNum","typeDict","0","1","2","3","4","unit","units","beginPath","arc","lineWidth","stroke","fill","canvas","current","addEventListener","e","rect","getBoundingClientRect","clientX","left","clientY","top","handleClick","getContext","renderBackground","renderUnits","clearRect","width","height","ref","selectedTile","MapTab","zoom","7","6","5","selected","move","containers_Map","sendUnitInfo","displayTileInfo","Tech","parentCoords","coords","path","vertDist","horizDist","selectTech","techList","paths","display","parents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","parentName","parent","showPath","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","grandparentName","err","return","getPath","position","buttonToRender","coordsHtml","d","ScienceTab","prereqsSatisfied","addJob","displayResearch","selectedTech","description","techObjectsList","containers_Tech","displaySelected","App","counter","daylength","setProgression","set","timerID","setInterval","tick","newTime","Date","getTime","dayLength","adoptBirb","hunger","setHunger","moveUnit","incomeGenerator","whence","inState","JSON","parse","localStorage","getItem","load","setItem","stringify","containers_Sidebar","unlockEverything","save","VisibleTabs","containers_tabs_HomeTab","containers_tabs_TownTab","containers_tabs_ScienceTab","containers_tabs_MapTab","containers_Infobox","action","update","defineProperty","$set","objectSpread","_update2","j","assign","concat","$push","season","day","hour","spring","summer","fall","winter","pop","newNum","newCosts","newUnit","toConsumableArray","newLoc","newResources","bigReducers","prevNumberOfModifiers","newEffects","targetGenerator","_i4","_Object$keys4","targetResource","_i5","_Object$keys5","_i6","_Object$keys6","_i7","_Object$keys7","numberOfGenerators","_i8","_Object$keys8","incomes","_i9","_Object$keys9","_i10","_Object$keys10","amount","allJobs","resourceChange","newResource","smolReducers","combineReducers","rootReducer","reduceReducers","container","document","body","appendChild","ReactGA","initialize","pageview","books","drawings","boxes","maxbluebs","maxwood","maxclay","maxstone","maxknowledge","maxbooks","maxdrawings","maxboxes","maxbirbs","foragers","woodpeckers","scholars","diggers","base","nest","birbhouse","campfire","library","kiln","home","3000004","bluebCapacity","woodCapacity","studying","training","teaching","drawing","woodworking","digging","fire","pottery","construction","mining","masonry","agriculture","geometry","writing","cartography","exploration","shed","store","createStore","render","es","containers_App"],"mappings":"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,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC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","file":"static/js/main.c3304506.chunk.js","sourcesContent":["var exports = module.exports = {};\r\n\r\n\r\nvar getValue = (target, buildings=null, resources=null, tech=null,) => { //gets the object of a name (ex: gets the number of 'woodpeckers', or the building object of 'birbhouse')\r\n  if (buildings){\r\n    for (const name of Object.keys(buildings)){\r\n      if (name==target){\r\n        return [buildings[name], 'building']}}}\r\n  if (resources){\r\n    for (const name of Object.keys(resources)){\r\n      if (name==target){\r\n        return [resources[name], 'resource']}}}\r\n  if (tech){\r\n    for (const name of Object.keys(tech)){\r\n      if (name==target){\r\n        return [tech[name], 'tech']}}}\r\n  return false}\r\nvar getNum = (target, buildings=null, resources=null, tech=false,) => {\r\n  var value = getValue(target, buildings, resources, tech)\r\n  if (value[1]=='tech'){return value[0].researched}\r\n  if (value[1]=='building'){return value[0].number}\r\n  if (value[1]=='resource'){return value[0]}\r\n  return(value[0])}\r\n\r\n\r\nvar round = (n) => {\r\n    if (n<.1){\r\n      return n.toFixed(3)}\r\n    if (n<.01){\r\n      return n.toFixed(4)}\r\n    if (n<.001){\r\n      return n.toFixed(5)}\r\n    if (n>1000000){\r\n      return (parseFloat((n/1000000.).toFixed(2))+'m')}\r\n    if (n>1000){\r\n      return (parseFloat((n/1000.).toFixed(2))+'k')}\r\n    if (n>100){\r\n      return Math.round(n)}\r\n    if (Math.abs(n - Math.round(n)) > .001){\r\n      return n.toFixed(2)}\r\n    else{return Math.round(n)}\r\n  }\r\n\r\nexports.getNum=getNum\r\nexports.round=round\r\n","\r\nexport const sendInfo = info => ({\r\n  type: 'SEND_INFO',\r\n  info})\r\nexport const tick = () => ({\r\n  type: 'TICK'})\r\n\r\nexport const addTab = (key, name) => ({\r\n  type: 'ADD_TAB', key, name})\r\nexport const addResource = name => ({\r\n  type: 'ADD_RESOURCE', name})\r\nexport const addJob = name => ({\r\n  type: 'ADD_JOB', name})\r\nexport const addBuilding = name => ({\r\n  type: 'ADD_BUILDING', name})\r\n\r\nexport const changeBirbs = n => ({\r\n  type: 'CHANGE_BIRBS', n })\r\nexport const adoptBirb = n => ({\r\n  type: 'ADOPT_BIRB', n})\r\n\r\nexport const build = (name, n) => ({\r\n  type: 'BUILD', name, n})\r\nexport const incrementCost = (name, n) => ({\r\n  type: 'INCREMENT_COST', name, n})\r\nexport const harvest = (name, n) => ({\r\n  type: 'HARVEST', name, n})\r\nexport const hire = (name, n) => ({\r\n  type: 'HIRE', name, n})\r\nexport const addMaxBirbs = (n) => ({\r\n  type: 'ADD_MAX_BIRBS', n})\r\nexport const set = (name, n) => ({\r\n  type: 'SET', name, n})\r\n\r\nlet idCounter = 0\r\nexport const spawnUnit = (name, species, job, location) => ({\r\n  type: 'SPAWN_UNIT',\r\n  id: idCounter++,\r\n  name, species, job, location })\r\nexport const moveUnit = (id, x, y) => ({\r\n  type: 'MOVE_UNIT', id, x, y})\r\nexport const selectTile = (coordinates) => ({\r\n  type: 'SELECT_TILE', coordinates})\r\nexport const makeTile = (coordinates, details) => ({\r\n  type: 'MAKE_TILE', coordinates, details})\r\n\r\nexport const research = (name) => ({\r\n  type: 'RESEARCH', name,})\r\nexport const selectTech = (name) => ({\r\n  type: 'SELECT_TECH', name,})\r\nexport const setProgression = (n) => ({\r\n  type: 'SET_PROGRESSION', n})\r\nexport const setHunger = (n) => ({\r\n  type: 'SET_HUNGER', n})\r\n\r\nexport const changeEffect = (name, target, n) => ({\r\n  type: 'CHANGE_EFFECT', name, target, n})\r\nexport const applyEffects = (name, n) => ({\r\n  type: 'APPLY_EFFECTS', name, n})\r\nexport const applyModifiers = (name, n) => ({\r\n  type: 'APPLY_MODIFIERS', name, n})\r\nexport const income = (name, n) => ({\r\n  type: 'INCOME', name, n})\r\nexport const load = () => ({\r\n  type: 'LOAD'})\r\n","import React, { Component } from 'react'\r\n\r\nvar getStuff = require('../modules/getStuff.js');\r\n\r\nclass Sidebar extends Component{\r\n  constructor(props){super(props);}\r\n  round(n){\r\n    if (n>1000000){\r\n      return (parseFloat((n/1000000.).toFixed(2))+'m')}\r\n    if (n>1000){\r\n      return (parseFloat((n/1000.).toFixed(2))+'k')}\r\n    if (n>100){\r\n      return Math.round(n)}\r\n    if (Math.abs(n - Math.round(n)) > .001){\r\n      return n.toFixed(2)}\r\n    else{return Math.round(n)}\r\n  }\r\n\r\n  getEffects(target, effects, resources){\r\n    var out = [{}, {}, {}, {}] //[0]:incomes, [1]:perm effects [2]: max effects [3]:modifiers\r\n    const maxTarget = 'max'+target\r\n    for (var generator of Object.keys(effects.income)){\r\n      if (target in effects.income[generator]){\r\n        const overallEffect = effects.income[generator][target]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if (overallEffect){\r\n          out[0][generator] = overallEffect}}}\r\n    for (var generator of Object.keys(effects.constant)){\r\n      if (target in effects.constant[generator]){\r\n        const overallEffect = effects.constant[generator][target]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if(overallEffect){\r\n          out[1][generator] = overallEffect}}\r\n      if (maxTarget in effects.constant[generator]){\r\n        const overallEffect = effects.constant[generator][maxTarget]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if(overallEffect){\r\n          out[2][generator] = overallEffect}}}\r\n    for (var generator of Object.keys(effects.modifiers)){\r\n      if (target in Object.keys(effects.modifiers[generator])){\r\n        const overallEffect = effects.modifers[generator][target]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if(overallEffect){\r\n          out[3][generator] = overallEffect}}}\r\n    var incomeDetails = Object.keys(out[0]).map(generator => <div key={generator} className='effect-detail'> &nbsp; {generator}: {this.round(10*out[0][generator])}/s <br/> </div>)\r\n    var effectsDetails = Object.keys(out[1]).map(generator => <div key={generator} className='effect-detail'> &nbsp; {generator}: {this.round(out[1][generator])} <br/> </div>)\r\n    var maxDetails = Object.keys(out[2]).map(generator => <div key={generator} className='effect-detail'> &nbsp; {generator}: {this.round(out[2][generator])} <br/> </div>)\r\n    var modifiersDetails = Object.keys(out[3]).map(generator => <div key={generator} className='effect-detail'> &nbsp; {generator}: {out[3][generator]} <br/> </div>)\r\n    if (Object.keys(out[0]).length>0){\r\n      var totalIncome = 'income: ' + this.round(10*(Object.values(out[0]).reduce((a, b) => a+b, 0))) + '/s'\r\n      var incomeOut = <div>\r\n        {totalIncome}\r\n        {incomeDetails}\r\n      </div>}\r\n    if (Object.keys(out[1]).length>0){\r\n      var totalEffects = 'effects: ' + this.round(Object.values(out[1]).reduce((a, b) => a+b, 0))\r\n      var effectsOut = <div>\r\n        {totalEffects}\r\n        {effectsDetails}\r\n      </div>}\r\n    if (Object.keys(out[2]).length>0){\r\n      var totalMax = 'cap: ' + this.round(resources[maxTarget])\r\n      var maxOut = <div>\r\n        {totalMax}\r\n        {maxDetails}\r\n      </div>}\r\n    if (Object.keys(out[3]).length>0){\r\n\r\n      }\r\n    return (\r\n      <div>\r\n        {incomeOut}\r\n        {effectsOut}\r\n        {maxOut}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n    const show = this.props.visibleResources\r\n    const res = this.props.resources\r\n    const resourceList = [ //this is for ordering in the sidebar, mostly\r\n      'birbs', 'bluebs', 'wood', 'clay', 'stone', 'knowledge', 'ceramic', 'boxes', 'drawings', 'books', 'happiness']\r\n    var seasonalBar = \"sidebar-\" + this.props.time[0]\r\n    return (\r\n      <div className='sidebar-wrapper'>\r\n      <div className={seasonalBar}>\r\n        {this.props.time[0]} day {this.props.time[1]} <br />\r\n        ~~~~~~~~~~~~~~~~~~\r\n        {resourceList.map(name =>\r\n          <ResourceLine key={name} name={name} res={res} show={show} getEffects={() => this.getEffects(name, this.props.effects, res)} /> )}\r\n      </div>\r\n      </div>)}}\r\nfunction ResourceLine(props) {\r\n  return (<Resource name={props.name} res={props.res[props.name]} max={props.res['max'+props.name]} show={props.show} getEffects={props.getEffects}/>)}\r\n\r\nclass Resource extends Component{\r\n  constructor(props){super(props);}\r\n  round(n){\r\n    if (n>=1000000){\r\n      return (parseFloat((n/1000000.).toFixed(2))+'m')}\r\n    if (n>=1000){\r\n      return (parseFloat((n/1000.).toFixed(2))+'k')}\r\n    if (n>=100){\r\n      return Math.round(n)}\r\n    if (Math.abs(n - Math.round(n)) < .001){\r\n      return Math.round(n)}\r\n    if (n>=10){\r\n      return n.toFixed(1)}\r\n    return n.toFixed(2)}\r\n\r\n  colorDict(name){\r\n    const resourceColors= {\r\n      'birbs': '#953',\r\n      'bluebs': '#33a',\r\n      'wood': '#853',\r\n      'knowledge': '#919',\r\n      'clay': '#b51',\r\n      'stone': '#888',\r\n      'happiness': '#bb1',\r\n      'ceramic': '#aac'}\r\n    return resourceColors[name]}\r\n\r\n  render() {\r\n    var mouseover =\r\n      (<div className='sidebar-item-mouseover'>\r\n        {this.props.getEffects()}\r\n      </div>)\r\n    var color = {color: this.colorDict(this.props.name)}\r\n    if (this.props.show.includes(this.props.name)){\r\n      if(this.props.max){\r\n        return (\r\n          <div className='sidebar-item'>\r\n            <span style={color}>{this.props.name}</span>: {this.round(this.props.res)}/{this.round(this.props.max)} <br/>\r\n            {mouseover}\r\n          </div>)}\r\n      else{\r\n        return (\r\n          <div className='sidebar-item'>\r\n            <span style={color}>{this.props.name}</span>: {this.round(this.props.res)} <br/>\r\n            {mouseover}\r\n          </div>)}}\r\n    else{return(<div />)}\r\n  }\r\n}\r\n\r\nexport default Sidebar\r\n","import { connect } from 'react-redux'\r\nimport { } from '../actions'\r\nimport Sidebar from '../components/Sidebar'\r\n\r\nconst mapStateToProps = state => ({\r\n  resources: state.resources,\r\n  buildings: state.buildings,\r\n  techs: state.techs,\r\n\r\n  visibleResources: state.info.visibleResources,\r\n\r\n  time: state.info.time,\r\n  effects: state.effects,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Sidebar)\r\n","import React, { Component } from 'react'\r\n//doesnt use redux cuz its simple\r\n\r\nclass Infobox extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"infobox\">\r\n        {this.props.info.map((info, index) =>\r\n          <div key={index}> {info} <br /> </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Info(props){\r\n  return <div> {props.text} <br /> </div>\r\n}\r\n\r\nexport default Infobox\r\n","import { connect } from 'react-redux'\r\nimport { sendInfo } from '../actions'\r\nimport Infobox from '../components/Infobox'\r\n\r\nconst mapStateToProps = state => ({\r\n  info: state.info.info,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  sendInfo,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Infobox)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n//the tab structure is taken from alligator.io/react/tabs-component/\r\n\r\nclass Tabs extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.instanceOf(Array).isRequired,\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: this.props.children[0].props.label,\r\n    };\r\n  }\r\n  onClickTabItem = (tab) => {\r\n    this.setState({ activeTab: tab });\r\n  }\r\n  render() {\r\n    const {\r\n      onClickTabItem,\r\n      props: {\r\n        children,\r\n      },\r\n      state: {\r\n        activeTab,\r\n      }\r\n    } = this;\r\n\r\n    return (\r\n      <div className=\"tabs\">\r\n        <ul className=\"tab-list\">\r\n          {children.map((child) => {\r\n            const { label } = child.props;\r\n            if (label in this.props.visibleTabs){\r\n              return (\r\n                <Tab\r\n                  activeTab={activeTab}\r\n                  key={label}\r\n                  label={label}\r\n                  name={this.props.visibleTabs[label]}\r\n                  onClick={onClickTabItem}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {children.map((child) => {\r\n            if (child.props.label !== activeTab) return undefined;\r\n            return child.props.children;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass Tab extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  }\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: {\r\n        activeTab,\r\n        label,\r\n      },\r\n    } = this;\r\n    let className = 'tab-list-item';\r\n    if (activeTab === label) {\r\n      className += ' tab-list-active';\r\n    }\r\n    return (\r\n      <li\r\n        className={className}\r\n        onClick={onClick}\r\n      >\r\n        {this.props.name}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs\r\n","import { connect } from 'react-redux'\r\nimport { } from '../../actions'\r\nimport Tabs from '../../components/tabs/Tabs'\r\n\r\nconst mapStateToProps = state => ({\r\n  visibleTabs: state.info.visibleTabs,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tabs)\r\n","import React, { Component } from 'react'\r\nvar getStuff = require('../modules/getStuff.js');\r\n\r\nclass Building extends Component{\r\n  constructor(props){super(props)}\r\n\r\n  build(n){\r\n    var info = this.props.buildings[this.props.name]\r\n    var enoughResources = true\r\n    var enoughBuildings = info.number+n\r\n    for (var resource in info.cost){\r\n      var cumulativeCost = info.cost[resource]*(1-Math.pow(info.costRatio, n))/(1-info.costRatio)\r\n      if (cumulativeCost>this.props.resources[resource]){\r\n        enoughResources = false\r\n        this.props.sendInfo('no resources :(')}}\r\n    if (enoughResources & enoughBuildings>=0){\r\n      for (resource in info.cost){\r\n        if(n>0){\r\n          this.props.harvest(resource, -info.cost[resource]*(1-Math.pow(info.costRatio, n))/(1-info.costRatio))\r\n          this.props.sendInfo(' u spent ' + info.cost[resource]*n + ' ' + resource + ' on a ' + this.props.name)}\r\n        else{\r\n          this.props.sendInfo('u destroyed a ' + this.props.name)\r\n        }\r\n      }\r\n      if(n>0){\r\n        for(var i = 0; i<n; i++){\r\n          this.props.build(this.props.name, 1)\r\n          this.props.incrementCost(this.props.name, 1)}}\r\n      else{\r\n        for(var i = 0; i>n; i--){\r\n          this.props.build(this.props.name, -1)\r\n          this.props.incrementCost(this.props.name, -1)}}\r\n      this.props.applyEffects(this.props.name, n)\r\n      this.props.applyModifiers(this.props.name, n)\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    if(!(this.props.visibleBuildings.includes(this.props.name))){return <div/>}\r\n    var info = this.props.buildings[this.props.name]\r\n    return(\r\n      <div className = \"menu-item\">\r\n        {this.props.name} ({info.number}): <button className='round' onClick={() => this.build(1)}> + </button> <button className='round' onClick={() => this.build(-1)}> - </button>\r\n        <br />\r\n        <div className = \"menu-item-mouseover\">\r\n          {info.desc} <br />\r\n          cost: <ul>\r\n            {Object.entries(info.cost).map(entry => <li key={entry[0]}> {entry[0]}: {getStuff.round(entry[1])} </li>)} </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Building\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  build,\r\n  harvest,\r\n  addMaxBirbs,\r\n  sendInfo,\r\n  applyEffects,\r\n  applyModifiers,\r\n  incrementCost,} from '../actions'\r\nimport Building from '../components/Building'\r\n\r\nconst mapStateToProps = state => ({\r\n  buildings: state.buildings,\r\n  visibleBuildings: state.info.visibleBuildings,\r\n  resources: state.resources,\r\n  effects: state.effects,\r\n})\r\n\r\n\r\nconst mapDispatchToProps = ({\r\n  build,\r\n  harvest,\r\n  addMaxBirbs,\r\n  sendInfo,\r\n  applyEffects,\r\n  applyModifiers,\r\n  incrementCost,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Building)\r\n","import React, { Component } from 'react'\r\nimport Building from '../../containers/Building'\r\n\r\n\r\n\r\n\r\nclass HomeTab extends Component{\r\n  constructor(props){super(props);}\r\n\r\n  render(){\r\n    var studyButton = (<div className='menu-item'> <button className='round' onClick={() => this.props.harvest('knowledge', .1)}> + </button> study <br/> </div>)\r\n    if (this.props.info.progression<2){studyButton=<div/>}\r\n    var craftingMenu = (\r\n      <div className=\"menu-crafting\">\r\n        crafting:\r\n        {Object.keys(this.props.info.recipes).map(name =>\r\n          <CraftingLine key={name} name={name} info={this.props.info} resources={this.props.resources} harvest={this.props.harvest} sendInfo={this.props.sendInfo}/>)}\r\n      </div>)\r\n    if (!this.props.tech['drawing'].researched){craftingMenu=<div/>}\r\n\r\n    return (\r\n      <div label=\"home\">\r\n        ur at home! <br/>\r\n        <div className=\"menu-smol\">\r\n          <div className='menu-item'> <button className='round' onClick={() => this.props.harvest('bluebs', .5+Math.random())}> + </button> pick bluebs <br/> </div>\r\n          <div className='menu-item'> <button className='round' onClick={() => this.props.harvest('wood', .5+Math.random())}> + </button> gather sticks <br/> </div>\r\n          {studyButton}\r\n          <div className='menu-item'> <button className='round' onClick={() => this.props.sendInfo('hi')}> + </button> hi <br/> </div>\r\n        </div>\r\n\r\n        {craftingMenu}\r\n\r\n        <div className=\"menu\">\r\n          buildings:\r\n          {Object.keys(this.props.buildings).map(name =>\r\n            <Building key={name} name={name}/>)}\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default HomeTab\r\n\r\nclass CraftingLine extends Component{\r\n  constructor(props){super(props)}\r\n  craft(name, n){\r\n    var info = this.props.info.recipes[name]\r\n    var enoughResources = true\r\n    if (Object.keys(this.props.resources).includes('max'+name)){\r\n      if (this.props.resources[name]+n > this.props.resources['max'+name]){\r\n        n = this.props.resources['max'+name]-this.props.resources[name]}}\r\n    for (var resource in info){\r\n      if (info[resource]*n>this.props.resources[resource]){\r\n        enoughResources=false\r\n        this.props.sendInfo('no resources :(')}}\r\n    if (enoughResources & n>0){\r\n      for(resource in info){\r\n        this.props.harvest(resource, -info[resource]*n)\r\n        this.props.sendInfo('u spent '+ info[resource] + ' ' + resource)}\r\n      this.props.harvest(name, n)}\r\n  }\r\n  render(){\r\n    if(this.props.info.visibleResources.includes(this.props.name)){\r\n      return (\r\n        <div className='menu-item'>\r\n          <button className='round-r' onClick = {()=>this.craft(this.props.name, 1)}> + </button> {this.props.name}\r\n          <div className='menu-item-mouseover'>\r\n            cost: <ul>\r\n              {Object.entries(this.props.info.recipes[this.props.name]).map(entry => <li> {entry[0]}: {entry[1]} </li>)} </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    else{return(<div />)}\r\n  }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  harvest,\r\n  build,\r\n  sendInfo,\r\n  applyEffects,\r\n } from '../../actions'\r\nimport HomeTab from '../../components/tabs/HomeTab'\r\n\r\nconst mapStateToProps = state => ({\r\n  buildings: state.buildings,\r\n  info: state.info,\r\n  resources: state.resources,\r\n  tech: state.tech,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  harvest,\r\n  build,\r\n  sendInfo,\r\n  applyEffects,\r\n}\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomeTab)\r\n","import React, { Component } from 'react'\r\nvar getStuff = require('../../modules/getStuff.js');\r\n\r\nclass TownTab extends Component{\r\n  constructor(props){\r\n    super(props);}\r\n  render(){\r\n    var birbs = this.props.resources\r\n    var show = this.props.visibleJobs\r\n    var effects = this.props.effects\r\n    var canEmploy = this.props.tech['training'].researched\r\n    if (canEmploy){\r\n      return (\r\n        <div label=\"home\">\r\n          give ur birbs jobs <br/>\r\n          u currently have {birbs.unemployed} free birbs <br/>\r\n          <div className='menu'>\r\n            jobs:\r\n            <JobLine job='foragers' hire={this.props.hire} birbs={birbs} show={show} effects={effects}/>\r\n            <JobLine job='woodpeckers' hire={this.props.hire} birbs={birbs} show={show} effects={effects}/>\r\n            <JobLine job='scholars' hire={this.props.hire} birbs={birbs} show={show} effects={effects}/>\r\n            <JobLine job='diggers' hire={this.props.hire} birbs={birbs} show={show} effects={effects}/>\r\n          </div>\r\n        </div>)}\r\n    else{ return <div> maybe you can train these birbs somehow? </div> }\r\n  }\r\n}\r\n\r\nclass JobLine extends Component{\r\n  constructor(props){super(props)}\r\n  render(){\r\n    var effectsToDisplay = []\r\n    var income = this.props.effects.income[this.props.job]\r\n    var constant = this.props.effects.constant[this.props.job]\r\n    if(income){effectsToDisplay.push(Object.keys(income).map(target => <div key={target}>{target}: {getStuff.round(income[target])}/s<br/></div>))}\r\n    if(constant){effectsToDisplay.push(Object.keys(constant).map(target => <div key={target}>{target}: {getStuff.round(constant[target])}<br/></div>))}\r\n    if(this.props.show.includes(this.props.job)){\r\n      return (\r\n        <div className = 'menu-item'>\r\n          {this.props.job} ({this.props.birbs[this.props.job]})\r\n          <button className='round-y' onClick={() =>\r\n            this.props.hire(this.props.job, 1)}> + </button>\r\n          <button className='round-y' onClick={() =>\r\n            this.props.hire(this.props.job,-1)}> - </button> <br/>\r\n          <div className = 'menu-item-mouseover'>\r\n            {effectsToDisplay}</div>\r\n        </div>\r\n\r\n      )}\r\n    else{return(<div />)}\r\n  }\r\n}\r\n\r\nexport default TownTab\r\n","import { connect } from 'react-redux'\r\nimport TownTab from '../../components/tabs/TownTab'\r\nimport {\r\n  hire,\r\n  spawnUnit,\r\n} from '../../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  resources: state.resources,\r\n  visibleJobs: state.info.visibleJobs,\r\n  tech: state.tech,\r\n  effects: state.effects,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  hire,\r\n  spawnUnit\r\n}\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TownTab)\r\n","import React, { Component } from 'react'\r\n\r\nclass Map extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.canvasRef = React.createRef();}\r\n\r\n  renderBackground(ctx){\r\n    const pixSize = this.props.pixSize\r\n    var lowerXToRender = Math.floor(-this.props.corner[1]/pixSize)-3\r\n    var higherXToRender = Math.floor((-this.props.corner[1]+240)/pixSize)+3\r\n    var lowerYToRender = Math.floor(-this.props.corner[0]/pixSize)-3\r\n    var higherYToRender = Math.floor((-this.props.corner[0]+240)/pixSize)+3\r\n    ctx.fillStyle='#ccc'\r\n    ctx.fillRect(this.props.corner[1]+pixSize*lowerXToRender, this.props.corner[0]+pixSize*lowerYToRender, pixSize*(higherXToRender-lowerXToRender), pixSize*(higherYToRender-lowerYToRender))\r\n    var tiles = this.props.tiles\r\n    for (var x = lowerXToRender; x < higherXToRender; x++){\r\n      for (var y = lowerYToRender; y < higherYToRender; y++){\r\n        const location = x*1000000+y\r\n        if (!Object.keys(tiles).includes(location.toString())){\r\n          this.generateTile(location)\r\n          console.log('generated')\r\n        }\r\n      }\r\n    }\r\n    for (var x = lowerXToRender; x < higherXToRender; x++){\r\n      for (var y = lowerYToRender; y < higherYToRender; y++){\r\n        const location = x*1000000+y\r\n        var tile = tiles[location]\r\n        if(tile){\r\n          ctx.fillStyle = tile.color\r\n          ctx.fillRect(pixSize*x+this.props.corner[1], pixSize*y+this.props.corner[0], pixSize, pixSize)}}}\r\n    console.log('rendered')\r\n  }\r\n  handleClick(pos){\r\n    const pixSize = this.props.pixSize\r\n    const x = Math.floor((pos.x - this.props.corner[1]) / pixSize)\r\n    const y = Math.floor((pos.y - this.props.corner[0]) / pixSize)\r\n    //add a unit selection thing here\r\n    this.props.selectTile(x*1000000+y)}\r\n  generateTile(pos){\r\n    const x = Math.round(pos/1000000)\r\n    const y = pos-x*1000000\r\n    var type = 'unknown'\r\n    var color = [150, 150, 150]\r\n    if(y>=0 & y<this.props.tileTypes.length & x>=0 & x<this.props.tileTypes[0].length){\r\n      const typeNum = this.props.tileTypes[y][x].toString()\r\n      const typeDict = {0: 'field', 1: 'water', 2:'hi', 3: 'aa', 4: 'j'}\r\n      const colorDict = {0: [108, 243, 86], 1: [80, 178, 251], 3: [132, 134, 135], 4: [20, 156, 43], }\r\n      if (Object.keys(typeDict).includes(typeNum)){\r\n        type = typeDict[typeNum]}\r\n      if (Object.keys(colorDict).includes(typeNum)){\r\n        color = colorDict[typeNum]\r\n        color[0] += (Math.random()-.5)*12\r\n        color[1] += (Math.random()-.5)*12\r\n        color[2] += (Math.random()-.5)*12}\r\n    }\r\n    this.props.makeTile(pos, {color: 'rgb('+color[0]+','+color[1]+','+color[2]+')', type: type})}\r\n  renderUnits(ctx){\r\n    ctx.fillStyle= '#42b3f5';\r\n    const pixSize = this.props.pixSize\r\n    for (var unit in this.props.units){\r\n      var unit = this.props.units[unit]\r\n      ctx.beginPath();\r\n      ctx.arc(pixSize*unit.location[0]+this.props.corner[1], pixSize*unit.location[1]+this.props.corner[0], pixSize/5, 0, 6.28);\r\n      ctx.lineWidth=pixSize/10;\r\n      ctx.stroke()\r\n      ctx.fill()\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    const canvas = this.canvasRef.current;\r\n    canvas.addEventListener('click', (e) => {\r\n      var rect = e.target.getBoundingClientRect()\r\n      const pos = {x:e.clientX-rect.left, y:e.clientY-rect.top}\r\n      this.handleClick(pos)})\r\n    var ctx = canvas.getContext('2d');\r\n    this.renderBackground(ctx);\r\n    this.renderUnits(ctx);}\r\n  componentDidUpdate(){\r\n    const canvas = this.canvasRef.current;\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //get rid of this later so u dont have to redraw everything\r\n    this.renderBackground(ctx);\r\n    this.renderUnits(ctx);}\r\n\r\n  render(){\r\n    return(\r\n      <div className='map'>\r\n        <canvas ref={this.canvasRef} width=\"240\" height=\"240\"/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  sendInfo,\r\n  selectTile,\r\n  makeTile,} from '../actions'\r\nimport Map from '../components/Map'\r\n\r\nconst mapStateToProps = state => ({\r\n  tiles: state.info.tiles,\r\n  tileTypes: state.info.tileTypes,\r\n  selectedTile: state.info.selectedTile,\r\n  units: state.units,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  sendInfo,\r\n  selectTile,\r\n  makeTile,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Map)\r\n","import React, { Component } from 'react'\r\nimport Map from '../../containers/Map'\r\n\r\nclass MapTab extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {zoom: 3, pixSize: 12, corner: [0, 0]}}\r\n\r\n\r\n  spawnUnit(){\r\n    this.props.spawnUnit('borb', 'bluebirb', 'unemployed', [3.5, 6.5])}\r\n  sendUnitInfo(n){\r\n    if (n >= this.props.units.length | n<0){return this.props.sendInfo('unit ' + n + \" doesn't exist\")}\r\n    const unit = this.props.units[n]\r\n    return this.props.sendInfo(unit.name + ' the ' + unit.species + ' ' + unit.job + ' has id ' + n + ' and location ' + unit.location)}\r\n  zoom(n){\r\n    const zoomDict = {7:2, 6:4, 5:6, 4:8, 3:12, 2:20, 1:28, 0:36}\r\n    if (this.state.zoom+n>=0 & this.state.zoom+n<=7){\r\n      this.setState({zoom: this.state.zoom+n, pixSize: zoomDict[this.state.zoom+n]})}}\r\n  move(x, y){\r\n    this.setState({corner: [this.state.corner[0]+x*20, this.state.corner[1]+y*20]})} //20 is the number of pixels the map shifting shifts by\r\n\r\n  displayTileInfo(){  //displays info about selected tile\r\n    const selected = this.props.info.selectedTile\r\n    const tile = this.props.info.tiles[selected]\r\n    if (tile){\r\n      const x = Math.floor(selected/1000000)\r\n      const y = selected-x*1000000\r\n      const infoDiv = <div>\r\n        location: ({x}, {y})\r\n        {Object.keys(tile).map(info => <div> {info}: {tile[info]} <br/> </div>)} </div>\r\n      return infoDiv}\r\n    return ('haha dude this tile is UNGENERATED! this is an error')\r\n  }\r\n  render(){\r\n    return (\r\n      <div>\r\n        <div className='map-wrapper'>\r\n          its a map! <br />\r\n          zoom: <button className = 'round-g' onClick={() => this.zoom(-1)}> + </button>\r\n          <button className = 'round-g' onClick={() => this.zoom(1)}> - </button> <br/>\r\n          shift: <br/>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <button className = 'round-g' onClick={() => this.move(1, 0)}> &uarr; </button> <br/>\r\n          <button className = 'round-g' onClick={() => this.move(0, 1)}> &larr; </button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <button className = 'round-g' onClick={() => this.move(0, -1)}> &rarr; </button> <br/>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <button className = 'round-g' onClick={() => this.move(-1, 0)}> &darr; </button>\r\n          <Map pixSize={this.state.pixSize} corner={this.state.corner} /> <br />\r\n          spawn a borb: <button className='round-g' onClick={() => this.spawnUnit()}> + </button> <br/>\r\n          see info about last borb: <button className='round-g' onClick={() => this.sendUnitInfo(this.props.units.length-1)} /> <br/>\r\n        </div>\r\n        <div className='tech-info'>{this.displayTileInfo()}</div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapTab\r\n","import { connect } from 'react-redux'\r\nimport MapTab from '../../components/tabs/MapTab'\r\nimport {\r\n  spawnUnit,\r\n  sendInfo,\r\n  makeTile,\r\n  selectTile,\r\n} from '../../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  map: state.info.map,\r\n  units: state.units,\r\n  info: state.info,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  spawnUnit,\r\n  sendInfo,\r\n  makeTile,\r\n  selectTile,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MapTab)\r\n","import React, {Component} from 'react'\r\n\r\nclass Tech extends Component{\r\n  constructor(props){super(props);}\r\n\r\n  getPath(parentCoords, coords){\r\n    const vertDist = coords[1]-parentCoords[1]-14 //subtract 14 to make room for the curvy parts\r\n    const horizDist = parentCoords[0]-coords[0]\r\n    var path\r\n      path = 'm'+(coords[0]+45)+' '+ (coords[1]+18) + 'v -7 '\r\n      path += 'c 0 0 ' + 0 + ' ' + -vertDist/2 + ' ' + horizDist/2 + ' ' + -vertDist/2\r\n      path += 'c 0 0 ' + horizDist/2 + ' ' + 0 + ' ' + horizDist/2 + ' ' + -vertDist/2\r\n      path += 'v -7'\r\n    return path\r\n  }\r\n  selectTech(name){\r\n    this.props.selectTech(name)}\r\n\r\n  render(){\r\n    const name = this.props.name\r\n    const tech = this.props.techList[name]\r\n    if(!name){return(<div> got a null tech </div>)}\r\n    var paths = []\r\n    var display = false\r\n    if (tech.parents.length==0){display=true}\r\n    for (var parentName of tech.parents){\r\n      const parent = this.props.techList[parentName]\r\n      if (!parent){\r\n        console.log('unknown parent' + parentName)}\r\n      var showPath = false\r\n      for (var grandparentName of parent.parents){\r\n        if (this.props.techList[grandparentName].researched){showPath=true}}\r\n      if (parent.researched){\r\n        display = true\r\n        showPath = true}\r\n      if (showPath)\r\n        {paths.push(this.getPath(parent.position, tech.position))}}\r\n    var buttonToRender = ''\r\n    if (display | tech.researched){\r\n      if (tech.researched){\r\n        buttonToRender=<button className='tech-researched' onClick={() => this.selectTech(name)}> {name} </button>}\r\n      else{\r\n        buttonToRender=<button className='tech' onClick={() => this.selectTech(name)}> {name} </button>}}\r\n    else{\r\n      buttonToRender=<div />\r\n      paths=[]}\r\n\r\n    const coordsHtml = {left: tech.position[0], top: tech.position[1]}\r\n    return(\r\n      <div>\r\n        <div className='lines'><svg height='600px' width='600px'>\r\n          {paths.map(path => <path key={path} d={path} className='line'/> )}\r\n\r\n        </svg></div>\r\n        <div className='tech-wrapper' style={coordsHtml}> {buttonToRender} </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tech\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  sendInfo,\r\n  selectTech,\r\n} from '../actions'\r\nimport Tech from '../components/Tech'\r\n\r\nconst mapStateToProps = state => ({\r\n  techList: state.tech,\r\n  info: state.info,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  sendInfo,\r\n  selectTech,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tech)\r\n","import React, { Component } from 'react'\r\nimport Tech from '../../containers/Tech'\r\nimport Tree from 'react-d3-tree';\r\n\r\nclass ScienceTab extends Component{\r\n  constructor(props){super(props); }\r\n\r\n  research(selected){\r\n    var info = this.props.tech[selected]\r\n    var enoughResources = true\r\n    var prereqsSatisfied = true\r\n    for (var resource in info.cost){\r\n      if (info.cost[resource]>this.props.resources[resource]){\r\n        enoughResources=false\r\n        this.props.sendInfo('no resources :(')}}\r\n    for (var parent in info.parents){\r\n      if (!this.props.tech[info.parents[parent]].researched){\r\n        prereqsSatisfied=false\r\n        this.props.sendInfo('previous techs not researched yet :(')}}\r\n    if (enoughResources & prereqsSatisfied){\r\n      for(resource in info.cost){\r\n        this.props.harvest(resource, -info.cost[resource])\r\n        this.props.sendInfo('u spent '+ info.cost[resource] + ' ' + resource)}\r\n      this.props.research(selected)\r\n      this.props.applyModifiers(selected, 1)\r\n      this.props.applyEffects(selected, 1)\r\n      switch (selected){\r\n        case 'teaching':\r\n          this.props.addJob('scholars')\r\n          break\r\n        case 'woodworking':\r\n          this.props.addResource('boxes')\r\n          break\r\n        case 'fire':\r\n          this.props.addBuilding('campfire')\r\n          this.props.addTab('town', 'settlement')\r\n          this.props.addResource('happiness')\r\n          break\r\n        case 'digging':\r\n          this.props.addResource('clay')\r\n          this.props.addResource('stone')\r\n          this.props.addJob('diggers')\r\n          break\r\n        case 'pottery':\r\n          this.props.addBuilding('kiln')\r\n          this.props.addResource('ceramic')\r\n        case 'drawing':\r\n          this.props.addResource('drawings')\r\n          this.props.addResource('happiness')\r\n          break\r\n        case 'writing':\r\n          this.props.addResource('books')\r\n          break\r\n        case 'cartography':\r\n          this.props.addTab('map', 'map')\r\n          break\r\n        case 'construction':\r\n          this.props.addBuilding('library')\r\n          break\r\n      }\r\n    }\r\n  }\r\n\r\n  displaySelected(){\r\n    var selected = this.props.info.selectedTech\r\n    var selectedTech = this.props.tech[selected]\r\n    var displayResearch\r\n    if (selectedTech.researched){\r\n      displayResearch = <div>{\"researched\"}<br/></div> }\r\n    else{\r\n      displayResearch = <div>{\"research?\"} <button className='round' onClick={() => this.research(selected)}> </button> <br/> </div> }\r\n    return (\r\n      <div>\r\n        <h2>{selected}</h2>\r\n        {selectedTech.description}<br/>\r\n        cost:\r\n          {Object.keys(selectedTech.cost).map(resource => <h4>&nbsp;&nbsp;{resource + ' '+ selectedTech.cost[resource]} </h4> )}\r\n        {displayResearch} <br/>\r\n      </div>\r\n    )\r\n  }\r\n  render(){\r\n    const techList = this.props.tech\r\n    const techObjectsList = Object.keys(techList).map(\r\n      name => <Tech name={name} techList={techList} research={this.props.research}/> )\r\n    return (\r\n      <div label=\"science\" className=\"science\">\r\n        <div className=\"tree-wrapper\">\r\n          {techObjectsList}</div>\r\n        <div className=\"tech-info\">\r\n          {this.displaySelected()} </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ScienceTab\r\n","import { connect } from 'react-redux'\r\nimport ScienceTab from '../../components/tabs/ScienceTab'\r\nimport {\r\n  research,\r\n  harvest,\r\n  sendInfo,\r\n  addTab,\r\n  addBuilding,\r\n  addResource,\r\n  addJob,\r\n  applyModifiers,\r\n  applyEffects,\r\n} from '../../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech,\r\n  resources: state.resources,\r\n  info: state.info,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  research,\r\n  harvest,\r\n  sendInfo,\r\n  addTab,\r\n  addBuilding,\r\n  addResource,\r\n  addJob,\r\n  applyModifiers,\r\n  applyEffects,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ScienceTab)\r\n","import React from 'react';\nimport './App.scss';\n\nimport Sidebar from '../containers/Sidebar'\nimport Infobox from '../containers/Infobox'\nimport Tabs from '../containers/tabs/VisibleTabs.js'\nimport HomeTab from '../containers/tabs/HomeTab.js'\nimport TownTab from '../containers/tabs/TownTab.js'\nimport MapTab from '../containers/tabs/MapTab.js'\nimport ScienceTab from '../containers/tabs/ScienceTab.js'\n\nimport {initState} from '../initialState.js'\nvar getStuff = require('../modules/getStuff.js');\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.counter = 1\n    this.state = {daylength: 0, time: 0}\n    this.props.applyEffects('base', 1)\n    this.props.sendInfo('there are also a lot of blueb bushs to eat.')\n    this.props.sendInfo('you look around and see lots of birbs flying around.')\n    this.props.sendInfo('you wake up in a grassy field...')\n\n    //this.load('startup')\n    //readd the load when u release\n  }\n\n  unlockEverything(){ //for debugging ez\n    this.props.setProgression(3)\n    this.props.addTab('town', 'settlement')\n    this.props.addTab('science', 'study')\n    this.props.addResource('birbs')\n    this.props.addResource('knowledge')\n    this.props.set('maxknowledge', 50000)\n    this.props.harvest('wood', 100)\n    this.props.harvest('bluebs', 100)\n    this.props.harvest('knowledge', 50000)\n    this.props.harvest('stone', 50)\n    this.props.harvest('clay', 50)\n    this.props.build('nest', 10)\n    this.props.applyEffects('nest', 10)}\n\n  componentDidMount(){\n    this.timerID = setInterval(() => this.tick(), 100)}\n  tick(){\n    //in game time change\n    if (this.counter%5==0){\n      var newTime = new Date().getTime()\n      this.setState({dayLength: (newTime - this.state.time), time: newTime})\n      this.props.tick()}\n\n    //early game (pre-science) progress tracking\n    if (this.props.info.progression<3 & this.counter%50==0){\n      if (this.props.info.progression==0){\n        if (this.props.buildings['nest'].number>0 & this.props.resources['bluebs']>1){\n          this.props.setProgression(1)\n          this.props.addTab('town', 'birb tree')\n          this.props.addResource('birbs')\n          this.props.adoptBirb(1);\n          this.props.spawnUnit('borb', 'unemployed', 'unemployed', [3.5, 6.5])\n          this.props.sendInfo('a birb lands in ur nest! maybe you can be friends? maybe other birbs will come too?')}}\n      if (this.props.info.progression==1){\n        if (this.props.resources['birbs']>=3){\n          this.props.setProgression(2)\n          this.props.addResource('knowledge')\n          this.props.sendInfo('maybe you can learn how to do more things if u study.')}}\n      if (this.props.info.progression==2){\n        if (this.props.resources['knowledge']>5){\n          this.props.setProgression(3)\n          this.props.addTab('science', 'study')}}}\n    //borb inflow and outflow\n    if (this.counter%20==0 & this.props.info.progression>0){\n      if ((Math.random()<.1+(.1*(this.props.resources['maxbirbs']-this.props.resources['birbs'])))&(this.props.resources['bluebs']>1)){\n        this.props.adoptBirb(1);}\n      if ((this.props.resources['bluebs']<1) & (this.props.resources['birbs']>0) & (Math.random()<.5)){\n        var hunger = this.props.info.hunger\n        if(hunger==0){\n          if(this.props.info.progression<1){\n            this.props.sendInfo(\"your borbs are hungery.... feed them or they'll fly away!!\")}\n          else{\n            (this.props.sendInfo(\"your borbs are hungery... \"))}}\n        this.props.setHunger(hunger + 1)\n        if(hunger>4){\n          this.props.sendInfo(\"a borb flew away :(\")\n          this.props.adoptBirb(-1);\n          if(this.props.resources['woodpeckers']>0){this.props.hire('woodpeckers', -1)}\n          else if (this.props.resources['scholars']>0){this.props.hire('scholars', -1)}\n          else {this.props.hire('farmers', -1)}\n          this.props.setHunger(0)}}}\n    //unit moving\n    if (this.counter%2==-1){\n      for (const unit in this.props.units){\n        this.props.moveUnit(unit, (Math.random()-.5)*.2, (Math.random()-.5)*.2)}}\n    //income\n    if (this.counter%1==0){\n      for (const incomeGenerator of Object.keys(this.props.effects.income)){\n        this.props.income(incomeGenerator, getStuff.getNum(incomeGenerator, this.props.buildings, this.props.resources, this.props.tech))}}\n    //if (this.counter%200==0){\n    //  this.save('autosave')}\n    if (this.counter%200==0 & Math.random()<.01 & this.props.resources['birbs']>2){this.props.sendInfo('a borb c h o r p s')}\n    this.counter = (this.counter+1)%1200\n  }\n\n  load(whence){\n    try{\n      const inState = JSON.parse(localStorage.getItem('state'))\n      if (inState!= null){\n        if(inState['resources']['maxbluebs']!=0){\n          this.props.load()\n          this.props.sendInfo('loaded!')}}\n      else {if(whence=='button'){this.props.sendInfo('no save state found :c')}}}\n    catch (err) {if(whence=='button'){this.props.sendInfo('no save state found :/')}}}\n  save(whence){\n    localStorage.setItem('state', JSON.stringify(this.props.state))\n    if(whence=='button'){this.props.sendInfo('saved!') }\n    //if(whence=='autosave'){this.props.sendInfo('autosaved!') }\n    if(whence=='reset'){\n      localStorage.setItem('state', undefined)\n      this.props.sendInfo('reset successful! refresh the page to start from nothing (or click save right now if you want to cancel the reset!!)')\n      console.log(localStorage.getItem('state'))}}\n  render(){\n    return (\n      <div>\n        <Sidebar/>\n        <div className='not-sidebar'>\n          <div className='header'>\n            <h3>{this.state.dayLength}\n              <button className='save-button' onClick={() => this.unlockEverything()}> debugmode </button>\n              <button className='save-button' onClick={() => this.save('button')}> save </button>\n              <button className='save-button' onClick={() => this.load('button')}> load </button>\n              <button className='save-button' onClick={() => this.save('reset')}> hard reset </button>\n            </h3>\n            <h1>bluebs game </h1>\n          </div>\n          <Tabs\n            visibleTabs = {this.props.info.visibleTabs}>\n            <div label='home'>\n              <HomeTab/> </div>\n            <div label=\"town\">\n              <TownTab/> </div>\n            <div label=\"science\">\n              <ScienceTab /> </div>\n            <div label=\"map\">\n              <MapTab /></div>\n          </Tabs>\n        <Infobox />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux'\r\nimport App from '../components/App'\r\n\r\n\r\nimport {\r\n  harvest,\r\n  build,\r\n  adoptBirb,\r\n  set,\r\n  sendInfo,\r\n  tick,\r\n  addTab,\r\n  addResource,\r\n  addBuilding,\r\n  moveUnit,\r\n  spawnUnit,\r\n  income,\r\n  applyEffects,\r\n  setHunger,\r\n  setProgression,\r\n  research,\r\n  hire,\r\n  load,\r\n} from '../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  state: state,\r\n  resources: state.resources,\r\n  buildings: state.buildings,\r\n  info: state.info,\r\n  units: state.units,\r\n  tech: state.tech,\r\n  effects: state.effects,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  harvest,\r\n  build,\r\n  adoptBirb,\r\n  set,\r\n  sendInfo,\r\n  tick,\r\n  addTab,\r\n  addResource,\r\n  addBuilding,\r\n  moveUnit,\r\n  spawnUnit,\r\n  income,\r\n  applyEffects,\r\n  setHunger,\r\n  setProgression,\r\n  research,\r\n  hire,\r\n  load,\r\n}\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n","import update from 'react-addons-update'\r\n\r\nconst resources = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'SET':\r\n      return update(state, {[action.name]: {$set: action.n}})\r\n    case 'ADOPT_BIRB':\r\n      if (state['birbs'] <= state['maxbirbs']-action.n){\r\n        return {...state,\r\n          'birbs': state['birbs']+action.n,\r\n          'unemployed': state['unemployed']+action.n,}}\r\n      else {return state}\r\n    case 'HIRE':\r\n      var j = state[action.name]+action.n\r\n      if ((state.unemployed >= action.n) & (action.n+state[action.name]>=0)){\r\n        return update(state, {\r\n          [action.name]: {$set: j},\r\n          'unemployed': {$set: state['unemployed']-action.n}})}\r\n      else{return state}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default resources\r\n","import update from 'react-addons-update'\r\n\r\n\r\nconst info = (state = [], action) => {\r\n  switch (action.type) {\r\n\r\n    //these add functions are just to make things visible as u unlock them in the game\r\n    case 'ADD_TAB':\r\n      return update(state, {visibleTabs: {[action.key]: {$set: action.name}}})\r\n    case 'ADD_RESOURCE':\r\n      if (!(action.name in state.visibleResources)){\r\n        return Object.assign({}, state, {\r\n          visibleResources: state.visibleResources.concat(action.name)})}\r\n      else{return state}\r\n    case 'ADD_JOB':\r\n      if (!(action.name in state.visibleJobs)){\r\n        return Object.assign({}, state, {\r\n          visibleJobs: state.visibleJobs.concat(action.name)})}\r\n      else{return state}\r\n    case 'ADD_MAP':\r\n      return {...state, map:action.map}\r\n    case 'ADD_BUILDING':\r\n      return update(state, {visibleBuildings: {$push: [action.name]}})\r\n    case 'SELECT_TECH':\r\n      return {...state, selectedTech:action.name}\r\n    case 'SELECT_TILE':\r\n      return {...state, selectedTile:action.coordinates}\r\n    case 'MAKE_TILE':\r\n      return update(state, {tiles: {[action.coordinates]: {$set: action.details}}})\r\n    case 'TICK':\r\n      var season = state.time[0]\r\n      var day = state.time[1]\r\n      var hour = state.time[2] + 1\r\n      const nextSeasonDict = {'spring':'summer', 'summer':'fall', 'fall':'winter', 'winter':'spring'}\r\n      if(hour>=24){\r\n        hour=0\r\n        day=day+1}\r\n      if(day>=31){\r\n        day=1\r\n        season=nextSeasonDict[season]}\r\n      return {...state,\r\n        time: [season, day, hour]}\r\n    case 'SEND_INFO':\r\n      if (state.info > 100){\r\n        state.info.pop()}\r\n      return Object.assign({}, state, {\r\n        info: [action.info].concat(state.info)})\r\n    case 'SET_PROGRESSION':\r\n      return update(state, {progression: {$set: action.n}})\r\n    case 'SET_HUNGER':\r\n      return update(state, {hunger: {$set: action.n}})\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default info\r\n","\r\nimport update from 'react-addons-update'\r\n\r\nconst buildings = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'BUILD':\r\n      const newNum = state[action.name].number+action.n\r\n      return update(state, {[action.name]: {number: {$set: newNum}}})\r\n    case 'INCREMENT_COST':\r\n      const newCosts =  Object.assign({}, state[action.name].cost)\r\n      if (action.n==1){\r\n        for (var resource of Object.keys(newCosts)){\r\n          newCosts[resource] = state[action.name].cost[resource]*state[action.name].costRatio}}\r\n      if(action.n==-1){\r\n        for (var resource of Object.keys(newCosts)){\r\n          newCosts[resource] = state[action.name].cost[resource]/state[action.name].costRatio}}\r\n      return update(state, {[action.name]: {cost: {$set: newCosts}}})\r\n    default:\r\n      return state\r\n    }\r\n  }\r\nexport default buildings\r\n","import update from 'react-addons-update'\r\n\r\nconst units = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'SPAWN_UNIT':\r\n      var newUnit = {\r\n        id: action.id,\r\n        name: action.name,\r\n        species: action.species,\r\n        job: action.job,\r\n        location: action.location};\r\n      return [...state, newUnit]\r\n    case 'MOVE_UNIT':\r\n      const newLoc = [action.x + state[action.id].location[0], action.y + state[action.id].location[1]]\r\n      return update(state, {[action.id]: {location: {$set: newLoc}}})\r\n    default:\r\n      return state\r\n    }\r\n  }\r\n\r\nexport default units\r\n","import update from 'react-addons-update'\r\n\r\nconst tech = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'RESEARCH':\r\n      return update(state, {[action.name]: {researched: {$set: 1}}})\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default tech\r\n","import update from 'react-addons-update'\r\n\r\nconst effects = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_EFFECT':\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default effects\r\n","import update from 'react-addons-update'\r\nvar getStuff = require('../modules/getStuff.js');\r\n\r\nexport var applyEffects = (resources, effects, name, n) => { //why do i have to use arrow notation here???\r\n  var newResources = Object.assign({}, resources)\r\n  var effects = effects.constant[name]\r\n  if(effects){\r\n    for (var target of Object.keys(effects)){\r\n      for (var resource of Object.keys(resources)){ //only affects resources\r\n        if(resource==target){\r\n          newResources[resource] += effects[target]*n}}}}\r\n  return newResources}\r\nexport var applyModifiers = (state, name, n) => {\r\n  var effects = state.effects\r\n  var prevNumberOfModifiers = getStuff.getNum(name, state.buildings, state.resources, state.tech)-1\r\n  var newEffects = Object.assign({}, effects)\r\n  var newResources = Object.assign({}, state.resources)\r\n  var modifiers = effects.modifiers[name]\r\n  if(modifiers){\r\n    for (var targetGenerator of Object.keys(modifiers)){\r\n      for (var targetResource of Object.keys(modifiers[targetGenerator])){\r\n        if(modifiers[targetGenerator][targetResource].income==1){\r\n          for (var generator of Object.keys(effects.income)){\r\n            if (generator==targetGenerator){\r\n              for (var resource of Object.keys(effects.income[generator])){\r\n                if (resource==targetResource){\r\n                  newEffects.income[generator][resource] /= (1+(prevNumberOfModifiers*modifiers[targetGenerator][targetResource].value))\r\n                  newEffects.income[generator][resource] *= (1+((n+prevNumberOfModifiers)*modifiers[targetGenerator][targetResource].value))\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else{\r\n          for (var generator of Object.keys(effects.constant)){\r\n            if(generator==targetGenerator){\r\n              var numberOfGenerators = getStuff.getNum(generator, state.buildings, state.resources, state.tech)\r\n              newResources = applyEffects(newResources, effects, generator, -numberOfGenerators)\r\n              for (var resource of Object.keys(effects.constant[generator])){\r\n                if (resource==targetResource){\r\n                  console.log(newEffects.constant[generator][resource])\r\n                  newEffects.constant[generator][resource] /= (1+(prevNumberOfModifiers*modifiers[targetGenerator][targetResource].value))\r\n                  console.log(newEffects.constant[generator][resource])\r\n                  newEffects.constant[generator][resource] *= (1+((n+prevNumberOfModifiers)*modifiers[targetGenerator][targetResource].value))\r\n                  console.log(newEffects.constant[generator][resource])\r\n                }\r\n              }\r\n              newResources = applyEffects(newResources, effects, generator, numberOfGenerators)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [newEffects, newResources]\r\n}\r\n\r\nconst bigReducers = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'APPLY_EFFECTS': //to be called on the creation of a generator (ex: building or research)\r\n      return {...state, resources: applyEffects(state.resources, state.effects, action.name, action.n)}\r\n    case 'APPLY_MODIFIERS':\r\n      var j = applyModifiers(state, action.name, action.n)\r\n      return {...state, effects: j[0], resources: j[1]}\r\n    case 'INCOME': //only incomes resources\r\n      var newResources = Object.assign({}, state.resources)\r\n      var incomes = state.effects.income[action.name]\r\n      var enoughResources = true\r\n      for (var target of Object.keys(incomes)){\r\n        for (var resource of Object.keys(state.resources)){\r\n          if(resource==target){\r\n            const current = state.resources[resource]\r\n            var max = 10000000000000\r\n            var amount=action.n*incomes[target]\r\n            if(state.info.allJobs.includes(action.name) | action.name=='birbs'){\r\n              amount *= state.resources['happiness']}\r\n            if('max'+resource in state.resources){\r\n              max = state.resources['max'+resource]}\r\n            newResources[resource]=current+amount\r\n            if(current+amount<=0){\r\n              enoughResources = false\r\n              newResources[resource] = 0}\r\n            if(current+amount>max){\r\n              newResources[resource] = max}\r\n            var resourceChange = newResources[resource]-state.resources[resource]\r\n            if (Object.keys(state.effects.constant).includes(resource) & resourceChange!=0){\r\n              newResources = applyEffects(newResources, state.effects, resource, resourceChange)\r\n            }}}}\r\n      if (enoughResources){\r\n        return {...state, resources: newResources}}\r\n      else {return state}\r\n    case 'HARVEST':\r\n      const current = state.resources[action.name]\r\n      var max = 10000000000000\r\n      if('max'+action.name in Object.keys(state)){\r\n        max = state.resources['max'+action.name]}\r\n      var newResource=current+action.n\r\n      if(newResource<=0){\r\n        newResource = 0}\r\n      if(newResource>max){\r\n        newResource = max}\r\n      var resourceChange = newResource-state.resources[action.name]\r\n      var newResources = Object.assign({}, state.resources)\r\n      newResources[action.name]=newResource\r\n      if (Object.keys(state.effects.constant).includes(action.name) & resourceChange!=0){\r\n        newResources = applyEffects(newResources, state.effects, action.name, resourceChange)}\r\n      return {...state, resources: newResources}\r\n    case 'LOAD':\r\n      return JSON.parse(localStorage.getItem('state'));\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default bigReducers\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n","import { combineReducers } from 'redux'\r\nimport reduceReducers from 'reduce-reducers'\r\nimport resources from './resources'\r\nimport info from './info'\r\nimport buildings from './buildings'\r\nimport units from './units'\r\nimport tech from './tech'\r\nimport effects from './effects'\r\n\r\n//reducers that mess with entire state go in here\r\nimport bigReducers from './bigReducers'\r\n\r\n//reducers that mess with one slice of state go in these children reducer files\r\nconst smolReducers = combineReducers({\r\n  resources,\r\n  info,\r\n  buildings,\r\n  units,\r\n  tech,\r\n  effects,\r\n})\r\n\r\nconst rootReducer = reduceReducers(\r\n  smolReducers,\r\n  bigReducers)\r\n\r\nexport default rootReducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { render } from 'react-dom';\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport ReactGA from 'react-ga'\n\nimport App from './containers/App';\nimport rootReducer from './reducers'\nimport {initState} from './initialState.js'\n\nconst container = document.createElement('div');\ndocument.body.appendChild(container)\n\nconst trackingId = \"UA-144895650-1\"\nReactGA.initialize(trackingId)\nReactGA.pageview('');\n\n\nvar state = Object.assign({}, initState)\nconst store = createStore(rootReducer, state)\n\nrender(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  container\n)\n\n\n\n//import * as serviceWorker from './serviceWorker';\n//serviceWorker.unregister(); note i deleted the serviceworker\n","\r\nconst initState = {\r\n  resources: {\r\n    'bluebs': 0,\r\n    'wood': 0,\r\n    'clay': 0,\r\n    'stone': 0,\r\n    'knowledge': 0,\r\n    'books': 0,\r\n    'drawings': 0,\r\n    'boxes': 0,\r\n    'ceramic': 0,\r\n\r\n    'maxbluebs': 0,\r\n    'maxwood': 0,\r\n    'maxclay': 0,\r\n    'maxstone': 0,\r\n    'maxknowledge': 0,\r\n    'maxbooks': 0,\r\n    'maxdrawings': 0,\r\n    'maxboxes': 0,\r\n\r\n    'birbs': 0,\r\n    'maxbirbs': 0,\r\n    'unemployed': 0,\r\n    'foragers': 0,\r\n    'woodpeckers': 0,\r\n    'scholars': 0,\r\n    'diggers': 0,\r\n\r\n    'happiness': 1.0,\r\n  },\r\n\r\n  buildings: {\r\n    'base':{\r\n      number: 1,\r\n      desc: \"ur tent! (wait, u shouldn't be seeing this...)\",\r\n      cost: {},\r\n      costRatio: 0,},\r\n    'nest':{\r\n      number: 0,\r\n      desc: 'a little home for two birbs to live',\r\n      cost: {'wood':10,},\r\n      costRatio: 1.1,},\r\n    'birbhouse':{\r\n      number: 0,\r\n      desc: 'space for four birbs to live!' ,\r\n      cost: {'wood':30},\r\n      costRatio: 1.1,},\r\n    'campfire':{\r\n      number: 0,\r\n      desc: 'keeps u and ur birbs warm and happy',\r\n      cost: {'wood':20},\r\n      costRatio: 2,},\r\n    'library':{\r\n      number: 0,\r\n      desc: 'place to store all ur drawings and books!',\r\n      cost: {'wood':30},\r\n      costRatio: 1.1},\r\n    'kiln': {\r\n      number: 0,\r\n      desc: 'fires pottery',\r\n      cost: {'clay':10},\r\n      costRatio: 1.1, },\r\n  },\r\n\r\n  info: {\r\n    visibleTabs: {\r\n      'home': 'tent', },\r\n    visibleResources:[\r\n      'bluebs',\r\n      'wood',],\r\n    visibleJobs:[\r\n      'woodpeckers',\r\n      'foragers',],\r\n    allJobs: [\r\n      'foragers', 'woodpeckers', 'scholars', 'diggers'],\r\n    visibleBuildings:[\r\n      'nest',],\r\n    info: [],\r\n    time: ['spring', 1, 1],\r\n    tileTypes:\r\n    [[3, 3, 0, 1, 1, 1, 1, 1, 0, 0, 3, 3, 3, 4, 0, 0, 0, 0, 0, 1],\r\n     [3, 3, 0, 1, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 4, 4, 0, 0, 0, 0],\r\n     [3, 3, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 4, 0, 0, 0, 0],\r\n     [3, 4, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0],\r\n     [3, 4, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0],\r\n     [3, 4, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 3, 3, 0, 3, 0, 0, 0, 0],\r\n     [4, 0, 0, 2, 0, 0, 1, 1, 1, 1, 1, 0, 3, 3, 0, 3, 0, 0, 0, 0],\r\n     [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 3, 3, 3, 3, 0, 0, 0],\r\n     [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 3, 3, 3, 3, 0, 0, 0],\r\n     [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 0, 0, 0],\r\n     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 3, 0, 0, 0],\r\n     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 3, 3, 0, 0, 0],\r\n     [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 3, 3, 3, 0, 0],\r\n     [4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 3, 3, 0, 0],\r\n     [4, 4, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 0, 0],\r\n     [4, 4, 0, 0, 0, 4, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 3, 3, 0, 0],\r\n     [4, 4, 4, 0, 4, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 4, 0, 3, 3],\r\n     [4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 1, 1, 0, 0, 0, 4, 0, 0, 0, 3],\r\n     [4, 4, 0, 0, 0, 0, 4, 0, 0, 1, 1, 1, 0, 0, 0, 4, 4, 0, 0, 3],\r\n     [4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 3, 4, 0, 0],],\r\n    tiles: {\r\n      3000004: {color: '#222', type: 'field', bluebCapacity: 100, woodCapacity: 50},\r\n    },\r\n    selectedTile: 3000004,\r\n    selectedTech: 'studying',\r\n    progression: 0,\r\n    hunger: 0,\r\n    recipes: {\r\n      'boxes': {'wood': 50},\r\n      'drawings': {},\r\n      'books': {'wood': 1, 'bluebs': 1},\r\n    }\r\n  },\r\n\r\n  units: [],\r\n\r\n  tech:{\r\n    'studying': {position: [150, 0], researched: 0, parents: [], children: ['training', 'woodworking'],\r\n      description: 'learn new things about the world!', cost:{'knowledge': 2}},\r\n    'training': {position: [200, 40], researched: 0, parents: ['studying'], children: ['teaching'],\r\n      description: 'teach ur birbs tricks!', cost:{'knowledge':5}},\r\n    'teaching': {position: [250, 80], researched: 0, parents: ['training'], children: ['drawing'],\r\n      description: 'maybe ur birbs can learn on their own?', cost:{'knowledge':10}},\r\n    'drawing': {position: [240, 120], researched: 0, parents: ['teaching'], children: ['writing', 'geometry'],\r\n      description: 'draw with stick to remember things', cost: {'knowledge': 30}},\r\n\r\n    'woodworking': {position: [100, 40], researched: 0, parents: ['studying'], children: ['digging', 'fire', 'construction'],\r\n      description: 'carve fun things', cost:{'knowledge':20, 'wood': 20} },\r\n    'digging': {position: [40, 80], researched: 0, parents: ['woodworking'], children: ['pottery', 'mining',],\r\n      description: 'there r all sorts of things in the ground...', cost: {'knowledge': 40, 'wood': 5}},\r\n    'fire': {position: [140, 80], researched: 0, parents: ['woodworking'], children: ['pottery'],\r\n      description: 'hot!', cost: {'knowledge': 30, 'wood': 15}},\r\n    'pottery': {position: [95, 120], researched: 0, parents: ['digging', 'fire'], children: [],\r\n      description: 'pots to hold things', cost: {'knowledge': 40}},\r\n    'construction': {position: [170, 180], researched: 0, parents: ['woodworking', 'geometry'], children: [],\r\n      description: 'build birb houses that can hold more birbs... and maybe more :o', cost:{'knowledge': 60}},\r\n\r\n    'mining': {position: [10, 115], researched: 0, parents: ['digging'], children: ['masonry'],\r\n      description: 'shiny rocks time', cost: {'knowledge': 200, 'stone': 20}},\r\n    'masonry': {position: [5, 150], researched: 0, parents: ['mining'], children: [],\r\n      description: 'its brick', cost: {'knowledge': 200, 'stone': 100}},\r\n\r\n    'agriculture': {position: [50, 175], researched: 0, parents: ['digging'], children: [],\r\n      description: 'maybe if we plant more blueberry bushes we can get more blueberries ovo', cost: {'knowledge': 200, 'clay': 20, 'wood': 100}},\r\n\r\n    'geometry': {position: [200, 150], researched: 0, parents: ['drawing'], children: ['cartography', 'construction'],\r\n      description: 'think about numbers n stuf.. ', cost:{'knowledge': 20}},\r\n    'writing': {position: [290, 160], researched: 0, parents:['drawing'], children: ['cartography'],\r\n      description: 'draw with stick to remember things', cost: {'knowledge': 10}},\r\n    'cartography': {position: [250, 200], researched: 0, parents:['writing', 'geometry'], children: [],\r\n      description: 'doodle a map', cost: {'knowledge': 10}},\r\n    'exploration': {position: [260, 240], researched: 0, parents:['cartography'], children: [],\r\n      description: 'send ur birbs on an adventure!', cost: {'knowledge': 30}},\r\n  },\r\n\r\n  effects: {\r\n    constant: {\r\n      'base': {'maxbluebs': 100,\r\n               'maxwood': 100,\r\n               'maxclay': 100,\r\n               'maxstone': 50,\r\n               'maxknowledge': 50,\r\n               'maxboxes': 10,\r\n               'maxdrawings': 10,\r\n               'maxbooks': 2,},\r\n      'nest': {'maxbirbs': 2},\r\n      'birbhouse': {'maxbirbs': 4},\r\n      'library': {'maxbooks': 30,\r\n                  'maxdrawings': 30},\r\n      'boxes': {'maxwood': 10,\r\n              'maxbluebs': 100,\r\n              'maxclay': 10,\r\n              'maxstone': 5,\r\n              'maxbooks': 1,},\r\n      'shed': {'maxboxes': 10,\r\n              'maxwood': 100 ,\r\n              'maxclay': 100,\r\n              'maxstone': 100,},\r\n      'drawings': {'maxknowledge': .1},\r\n      'books': {'maxknowledge': 1},\r\n      'campfire': {'happiness': .01},\r\n    },\r\n    income: {\r\n      'birbs': {'bluebs': -.005},\r\n      'foragers': {\"bluebs\": .02},\r\n      'woodpeckers': {'wood': .02},\r\n      'diggers': {'clay': .01,\r\n                  'stone': .002,},\r\n      'scholars': {'knowledge': .003},\r\n      'kiln': {'wood': -.01,\r\n              'clay': -.01,\r\n              'ceramic': .001,},\r\n    },\r\n    modifiers: {\r\n      'library': {'scholars': {'knowledge': {income: 1, value: .1}}},\r\n      'campfire': {'nest': {'maxbirbs': {income: 0, value: .1}}},\r\n\r\n    }\r\n  },\r\n}\r\n\r\n\r\n\r\nexport {initState}\r\n"],"sourceRoot":""}