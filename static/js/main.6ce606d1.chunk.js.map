{"version":3,"sources":["modules/getStuff.js","actions/index.js","components/Sidebar.js","containers/Sidebar.js","components/Infobox.js","containers/Infobox.js","components/tabs/Tabs.js","containers/tabs/VisibleTabs.js","components/Building.js","containers/Building.js","components/tabs/HomeTab.js","containers/tabs/HomeTab.js","components/tabs/TownTab.js","containers/tabs/TownTab.js","components/Map.js","containers/Map.js","components/tabs/MapTab.js","containers/tabs/MapTab.js","components/Tech.js","containers/Tech.js","components/tabs/ScienceTab.js","containers/tabs/ScienceTab.js","components/App.js","containers/App.js","reducers/resources.js","reducers/info.js","reducers/buildings.js","reducers/units.js","reducers/tech.js","reducers/effects.js","reducers/bigReducers.js","reducers/index.js","index.js","initialState.js"],"names":["exports","module","getNum","target","value","buildings","arguments","length","undefined","resources","tech","_i","_Object$keys","Object","keys","name","_i2","_Object$keys2","_i3","_Object$keys3","getValue","researched","number","round","n","parseFloat","toFixed","Math","abs","sendInfo","info","type","addTab","key","addResource","addMap","map","addBuilding","build","harvest","hire","idCounter","spawnUnit","species","job","location","id","research","applyEffects","applyModifiers","getStuff","require","Sidebar","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","effects","_this","out","maxTarget","income","generator","overallEffect","constant","modifiers","modifers","incomeDetails","react_default","a","createElement","className","maxDetails","totalIncome","values","reduce","b","incomeOut","totalMax","maxOut","_this2","show","visibleResources","res","seasonalBar","time","ResourceLine","getEffects","Component","Sidebar_Resource","max","Resource","birbs","bluebs","wood","knowledge","clay","stone","happiness","mouseover","color","colorDict","includes","style","connect","state","techs","Infobox","mapDispatchToProps","Tabs","onClickTabItem","tab","setState","activeTab","children","label","child","visibleTabs","Tabs_Tab","onClick","Tab","_this3$props","_this3","_this$props","Building","enoughResources","enoughBuildings","resource","cost","pow","costRatio","i","incrementCost","visibleBuildings","desc","entries","entry","addMaxBirbs","HomeTab","studyButton","progression","craftingMenu","recipes","HomeTab_CraftingLine","random","containers_Building","CraftingLine","craft","TownTab","visibleJobs","unemployed","TownTab_JobLine","JobLine","Map","canvasRef","React","createRef","canvas","dpr","window","devicePixelRatio","rect","getBoundingClientRect","width","height","ctx","getContext","scale","pixSize","col","row","fillStyle","fillRect","corner","unit","units","beginPath","arc","lineWidth","stroke","fill","current","renderBackground","renderUnits","clearRect","ref","MapTab","zoom","7","6","5","4","3","2","1","0","x","y","move","containers_Map","sendUnitInfo","Tech","parentCoords","coords","path","vertDist","horizDist","selectTech","techList","paths","display","parents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","parentName","parent","console","log","push","getPath","position","err","return","buttonToRender","coordsHtml","left","top","d","ScienceTab","selected","prereqsSatisfied","addJob","displayResearch","selectedTech","description","techObjectsList","containers_Tech","displaySelected","App","counter","daylength","setProgression","set","timerID","setInterval","tick","newTime","Date","getTime","dayLength","adoptBirb","hunger","setHunger","moveUnit","incomeGenerator","whence","inState","JSON","parse","localStorage","getItem","load","setItem","stringify","containers_Sidebar","unlockEverything","save","VisibleTabs","containers_tabs_HomeTab","containers_tabs_TownTab","containers_tabs_ScienceTab","containers_tabs_MapTab","containers_Infobox","action","update","defineProperty","$set","_objectSpread2","objectSpread","_update2","j","assign","concat","$push","season","day","hour","spring","summer","fall","winter","pop","newNum","newCosts","newUnit","toConsumableArray","newLoc","newResources","prevNumberOfModifiers","newEffects","targetGenerator","_i4","_Object$keys4","targetResource","_i5","_Object$keys5","_i6","_Object$keys6","_i7","_Object$keys7","numberOfGenerators","_i8","_Object$keys8","bigReducers","incomes","_i9","_Object$keys9","_i10","_Object$keys10","amount","allJobs","resourceChange","newResource","smolReducers","combineReducers","rootReducer","reduceReducers","container","document","body","appendChild","books","drawings","boxes","ceramic","maxbluebs","maxwood","maxclay","maxstone","maxknowledge","maxbooks","maxdrawings","maxbirbs","foragers","woodpeckers","scholars","diggers","base","nest","birbhouse","campfire","library","kiln","home","studying","training","teaching","drawing","woodworking","digging","fire","pottery","construction","math","writing","cartography","exploration","maxboxes","store","createStore","render","es","content","containers_App"],"mappings":"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","file":"static/js/main.6ce606d1.chunk.js","sourcesContent":["var exports = module.exports = {};\r\n\r\n\r\nvar getValue = (target, buildings=null, resources=null, tech=null,) => { //gets the object of a name (ex: gets the number of 'woodpeckers', or the building object of 'birbhouse')\r\n  if (buildings){\r\n    for (const name of Object.keys(buildings)){\r\n      if (name==target){\r\n        return [buildings[name], 'building']}}}\r\n  if (resources){\r\n    for (const name of Object.keys(resources)){\r\n      if (name==target){\r\n        return [resources[name], 'resource']}}}\r\n  if (tech){\r\n    for (const name of Object.keys(tech)){\r\n      if (name==target){\r\n        return [tech[name], 'tech']}}}\r\n  return false}\r\nvar getNum = (target, buildings=null, resources=null, tech=false,) => {\r\n  var value = getValue(target, buildings, resources, tech)\r\n  if (value[1]=='tech'){return value[0].researched}\r\n  if (value[1]=='building'){return value[0].number}\r\n  if (value[1]=='resource'){return value[0]}\r\n  return(value[0])}\r\n\r\n\r\nvar round = (n) => {\r\n    if (n>1000000){\r\n      return (parseFloat((n/1000000.).toFixed(2))+'m')}\r\n    if (n>1000){\r\n      return (parseFloat((n/1000.).toFixed(2))+'k')}\r\n    if (n>100){\r\n      return Math.round(n)}\r\n    if (Math.abs(n - Math.round(n)) > .001){\r\n      return n.toFixed(2)}\r\n    else{return Math.round(n)}\r\n  }\r\n\r\nexports.getNum=getNum\r\nexports.round=round\r\n","\r\nexport const sendInfo = info => ({\r\n  type: 'SEND_INFO',\r\n  info})\r\nexport const tick = () => ({\r\n  type: 'TICK'})\r\n\r\nexport const addTab = (key, name) => ({\r\n  type: 'ADD_TAB', key, name})\r\nexport const addResource = name => ({\r\n  type: 'ADD_RESOURCE', name})\r\nexport const addJob = name => ({\r\n  type: 'ADD_JOB', name})\r\nexport const addMap = map => ({\r\n  type: 'ADD_MAP', map})\r\nexport const addBuilding = name => ({\r\n  type: 'ADD_BUILDING', name})\r\n\r\nexport const changeBirbs = n => ({\r\n  type: 'CHANGE_BIRBS', n })\r\nexport const adoptBirb = n => ({\r\n  type: 'ADOPT_BIRB', n})\r\n\r\nexport const build = (name, n) => ({\r\n  type: 'BUILD', name, n})\r\nexport const incrementCost = (name, n) => ({\r\n  type: 'INCREMENT_COST', name, n})\r\nexport const harvest = (name, n) => ({\r\n  type: 'HARVEST', name, n})\r\nexport const hire = (name, n) => ({\r\n  type: 'HIRE', name, n})\r\nexport const addMaxBirbs = (n) => ({\r\n  type: 'ADD_MAX_BIRBS', n})\r\nexport const set = (name, n) => ({\r\n  type: 'SET', name, n})\r\n\r\nlet idCounter = 0\r\nexport const spawnUnit = (name, species, job, location) => ({\r\n  type: 'SPAWN_UNIT',\r\n  id: idCounter++,\r\n  name, species, job, location })\r\nexport const moveUnit = (id, x, y) => ({\r\n  type: 'MOVE_UNIT', id, x, y})\r\n\r\nexport const research = (name) => ({\r\n  type: 'RESEARCH', name,})\r\nexport const selectTech = (name) => ({\r\n  type: 'SELECT_TECH', name,})\r\nexport const setProgression = (n) => ({\r\n  type: 'SET_PROGRESSION', n})\r\nexport const setHunger = (n) => ({\r\n  type: 'SET_HUNGER', n})\r\n\r\nexport const changeEffect = (name, target, n) => ({\r\n  type: 'CHANGE_EFFECT', name, target, n})\r\nexport const applyEffects = (name, n) => ({\r\n  type: 'APPLY_EFFECTS', name, n})\r\nexport const applyModifiers = (name, n) => ({\r\n  type: 'APPLY_MODIFIERS', name, n})\r\nexport const income = (name, n) => ({\r\n  type: 'INCOME', name, n})\r\nexport const load = () => ({\r\n  type: 'LOAD'})\r\n","import React, { Component } from 'react'\r\n\r\nvar getStuff = require('../modules/getStuff.js');\r\n\r\nclass Sidebar extends Component{\r\n  constructor(props){super(props);}\r\n  round(n){\r\n    if (n>1000000){\r\n      return (parseFloat((n/1000000.).toFixed(2))+'m')}\r\n    if (n>1000){\r\n      return (parseFloat((n/1000.).toFixed(2))+'k')}\r\n    if (n>100){\r\n      return Math.round(n)}\r\n    if (Math.abs(n - Math.round(n)) > .001){\r\n      return n.toFixed(2)}\r\n    else{return Math.round(n)}\r\n  }\r\n\r\n  getEffects(target, effects, resources){\r\n    var out = [{}, {}, {}, {}] //[0]:incomes, [1]:perm effects [2]: max effects [3]:modifiers\r\n    const maxTarget = 'max'+target\r\n    for (var generator of Object.keys(effects.income)){\r\n      if (target in effects.income[generator]){\r\n        const overallEffect = effects.income[generator][target]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if (overallEffect){\r\n          out[0][generator] = overallEffect}}}\r\n    for (var generator of Object.keys(effects.constant)){\r\n      if (target in effects.constant[generator]){\r\n        const overallEffect = effects.constant[generator][target]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if(overallEffect){\r\n          out[1][generator] = overallEffect}}\r\n      if (maxTarget in effects.constant[generator]){\r\n        const overallEffect = effects.constant[generator][maxTarget]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if(overallEffect){\r\n          out[2][generator] = overallEffect}}}\r\n    for (var generator of Object.keys(effects.modifiers)){\r\n      if (target in Object.keys(effects.modifiers[generator])){\r\n        const overallEffect = effects.modifers[generator][target]*getStuff.getNum(generator, this.props.buildings, this.props.resources, this.props.tech)\r\n        if(overallEffect){\r\n          out[3][generator] = overallEffect}}}\r\n    var incomeDetails = Object.keys(out[0]).map(generator => <div className='effect-detail'> &nbsp; {generator}: {this.round(10*out[0][generator])}/s <br/> </div>)\r\n    var effectsDetails = Object.keys(out[1]).map(generator => <div className='effect-detail'> &nbsp; {generator}: {this.round(out[1][generator])} <br/> </div>)\r\n    var maxDetails = Object.keys(out[2]).map(generator => <div className='effect-detail'> &nbsp; {generator}: {this.round(out[2][generator])} <br/> </div>)\r\n    var modifiersDetails = Object.keys(out[3]).map(generator => <div className='effect-detail'> &nbsp; {generator}: {out[3][generator]} <br/> </div>)\r\n    if (Object.keys(out[0]).length>0){\r\n      var totalIncome = 'income: ' + this.round(10*(Object.values(out[0]).reduce((a, b) => a+b, 0))) + '/s'\r\n      var incomeOut = <div>\r\n        {totalIncome}\r\n        {incomeDetails}\r\n      </div>}\r\n    if (Object.keys(out[1]).length>0){\r\n      }\r\n    if (Object.keys(out[2]).length>0){\r\n      var totalMax = 'cap: ' + this.round(resources[maxTarget])\r\n      var maxOut = <div>\r\n        {totalMax}\r\n        {maxDetails}\r\n      </div>}\r\n    if (Object.keys(out[3]).length>0){\r\n      }\r\n    return (\r\n      <div>\r\n        {incomeOut}\r\n        {maxOut}\r\n      </div>\r\n    )\r\n\r\n\r\n  }\r\n\r\n  render(){\r\n    const show = this.props.visibleResources\r\n    const res = this.props.resources\r\n    const resourceList = [ //this is for ordering in the sidebar, mostly\r\n      'birbs', 'bluebs', 'wood', 'clay', 'stone', 'knowledge', 'ceramic', 'boxes', 'drawings', 'books', 'happiness']\r\n    var seasonalBar = \"sidebar-\" + this.props.time[0]\r\n    return (\r\n      <div className='sidebar-wrapper'>\r\n      <div className={seasonalBar}>\r\n        {this.props.time[0]} day {this.props.time[1]} <br />\r\n        ~~~~~~~~~~~~~~~~~~\r\n        {resourceList.map(name =>\r\n          <ResourceLine name={name} res={res} show={show} getEffects={() => this.getEffects(name, this.props.effects, res)} /> )}\r\n      </div>\r\n      </div>)}}\r\nfunction ResourceLine(props) {\r\n  return (<Resource name={props.name} res={props.res[props.name]} max={props.res['max'+props.name]} show={props.show} getEffects={props.getEffects}/>)}\r\n\r\nclass Resource extends Component{\r\n  constructor(props){super(props);}\r\n  round(n){\r\n    if (n>=1000000){\r\n      return (parseFloat((n/1000000.).toFixed(2))+'m')}\r\n    if (n>=1000){\r\n      return (parseFloat((n/1000.).toFixed(2))+'k')}\r\n    if (n>=100){\r\n      return Math.round(n)}\r\n    if (Math.abs(n - Math.round(n)) < .001){\r\n      return Math.round(n)}\r\n    if (n>=10){\r\n      return n.toFixed(1)}\r\n    return n.toFixed(2)}\r\n\r\n  colorDict(name){\r\n    const resourceColors= {\r\n      'birbs': '#953',\r\n      'bluebs': '#33a',\r\n      'wood': '#853',\r\n      'knowledge': '#919',\r\n      'clay': '#b51',\r\n      'stone': '#888',\r\n      'happiness': '#bb1',}\r\n    return resourceColors[name]}\r\n\r\n  render() {\r\n    var mouseover =\r\n      (<div className='sidebar-item-mouseover'>\r\n        {this.props.getEffects()}\r\n      </div>)\r\n    var color = {color: this.colorDict(this.props.name)}\r\n    if (this.props.show.includes(this.props.name)){\r\n      if(this.props.max){\r\n        return (\r\n          <div className='sidebar-item'>\r\n            <span style={color}>{this.props.name}</span>: {this.round(this.props.res)}/{this.round(this.props.max)} <br/>\r\n            {mouseover}\r\n          </div>)}\r\n      else{\r\n        return (\r\n          <div className='sidebar-item'>\r\n            <span style={color}>{this.props.name}</span>: {this.round(this.props.res)} <br/>\r\n            {mouseover}\r\n          </div>)}}\r\n    else{return(<div />)}\r\n  }\r\n}\r\n\r\nexport default Sidebar\r\n","import { connect } from 'react-redux'\r\nimport { } from '../actions'\r\nimport Sidebar from '../components/Sidebar'\r\n\r\nconst mapStateToProps = state => ({\r\n  resources: state.resources,\r\n  buildings: state.buildings,\r\n  techs: state.techs,\r\n\r\n  visibleResources: state.info.visibleResources,\r\n\r\n  time: state.info.time,\r\n  effects: state.effects,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Sidebar)\r\n","import React, { Component } from 'react'\r\n//doesnt use redux cuz its simple\r\n\r\nclass Infobox extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"infobox\">\r\n        {this.props.info.map((info) =>\r\n          <div> {info} <br /> </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Info(props){\r\n  return <div> {props.text} <br /> </div>\r\n}\r\n\r\nexport default Infobox\r\n","import { connect } from 'react-redux'\r\nimport { sendInfo } from '../actions'\r\nimport Infobox from '../components/Infobox'\r\n\r\nconst mapStateToProps = state => ({\r\n  info: state.info.info,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  sendInfo,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Infobox)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n//the tab structure is taken from alligator.io/react/tabs-component/\r\n\r\nclass Tabs extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.instanceOf(Array).isRequired,\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: this.props.children[0].props.label,\r\n    };\r\n  }\r\n  onClickTabItem = (tab) => {\r\n    this.setState({ activeTab: tab });\r\n  }\r\n  render() {\r\n    const {\r\n      onClickTabItem,\r\n      props: {\r\n        children,\r\n      },\r\n      state: {\r\n        activeTab,\r\n      }\r\n    } = this;\r\n\r\n    return (\r\n      <div className=\"tabs\">\r\n        <ul className=\"tab-list\">\r\n          {children.map((child) => {\r\n            const { label } = child.props;\r\n            if (label in this.props.visibleTabs){\r\n              return (\r\n                <Tab\r\n                  activeTab={activeTab}\r\n                  key={label}\r\n                  label={label}\r\n                  name={this.props.visibleTabs[label]}\r\n                  onClick={onClickTabItem}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {children.map((child) => {\r\n            if (child.props.label !== activeTab) return undefined;\r\n            return child.props.children;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass Tab extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  }\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: {\r\n        activeTab,\r\n        label,\r\n      },\r\n    } = this;\r\n    let className = 'tab-list-item';\r\n    if (activeTab === label) {\r\n      className += ' tab-list-active';\r\n    }\r\n    return (\r\n      <li\r\n        className={className}\r\n        onClick={onClick}\r\n      >\r\n        {this.props.name}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs\r\n","import { connect } from 'react-redux'\r\nimport { } from '../../actions'\r\nimport Tabs from '../../components/tabs/Tabs'\r\n\r\nconst mapStateToProps = state => ({\r\n  visibleTabs: state.info.visibleTabs,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tabs)\r\n","import React, { Component } from 'react'\r\nvar getStuff = require('../modules/getStuff.js');\r\n\r\nclass Building extends Component{\r\n  constructor(props){super(props)}\r\n\r\n  build(n){\r\n    var info = this.props.buildings[this.props.name]\r\n    var enoughResources = true\r\n    var enoughBuildings = info.number+n\r\n    for (var resource in info.cost){\r\n      var cumulativeCost = info.cost[resource]*(1-Math.pow(info.costRatio, n))/(1-info.costRatio)\r\n      if (cumulativeCost>this.props.resources[resource]){\r\n        enoughResources = false\r\n        this.props.sendInfo('no resources :(')}}\r\n    if (enoughResources & enoughBuildings>0){\r\n      for (resource in info.cost){\r\n        if(n>0){\r\n          this.props.harvest(resource, -info.cost[resource]*(1-Math.pow(info.costRatio, n))/(1-info.costRatio))\r\n          this.props.sendInfo(' u spent ' + info.cost[resource]*n + ' ' + resource + ' on a ' + this.props.name)}\r\n        this.props.sendInfo('u destroyed a ' + this.props.name)\r\n      }\r\n      for(var i = 0; i<n; i++){\r\n        this.props.build(this.props.name, 1)\r\n        this.props.incrementCost(this.props.name, 1)}\r\n      this.props.applyEffects(this.props.name, n)\r\n      this.props.applyModifiers(this.props.name, n)\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    if(!(this.props.visibleBuildings.includes(this.props.name))){return <div/>}\r\n    var info = this.props.buildings[this.props.name]\r\n    return(\r\n      <div className = \"menu-item\">\r\n        {this.props.name} ({info.number}): <button className='round' onClick={() => this.build(1)}> + </button> <button className='round' onClick={() => this.build(-1)}> - </button>\r\n        <br />\r\n        <div className = \"menu-item-mouseover\">\r\n          {info.desc} <br />\r\n          cost: <ul>\r\n            {Object.entries(info.cost).map(entry => <li> {entry[0]}: {getStuff.round(entry[1])} </li>)} </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Building\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  build,\r\n  harvest,\r\n  addMaxBirbs,\r\n  sendInfo,\r\n  applyEffects,\r\n  applyModifiers,\r\n  incrementCost,} from '../actions'\r\nimport Building from '../components/Building'\r\n\r\nconst mapStateToProps = state => ({\r\n  buildings: state.buildings,\r\n  visibleBuildings: state.info.visibleBuildings,\r\n  resources: state.resources,\r\n  effects: state.effects,\r\n})\r\n\r\n\r\nconst mapDispatchToProps = ({\r\n  build,\r\n  harvest,\r\n  addMaxBirbs,\r\n  sendInfo,\r\n  applyEffects,\r\n  applyModifiers,\r\n  incrementCost,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Building)\r\n","import React, { Component } from 'react'\r\nimport Building from '../../containers/Building'\r\n\r\n\r\n\r\n\r\nclass HomeTab extends Component{\r\n  constructor(props){super(props);}\r\n\r\n  render(){\r\n    var studyButton = (<div className='menu-item'> <button className='round' onClick={() => this.props.harvest('knowledge', .1)}> + </button> study <br/> </div>)\r\n    if (this.props.info.progression<2){studyButton=<div/>}\r\n    var craftingMenu = (\r\n      <div className=\"menu-crafting\">\r\n        crafting:\r\n        {Object.keys(this.props.info.recipes).map(name =>\r\n          <CraftingLine name={name} info={this.props.info} resources={this.props.resources} harvest={this.props.harvest} sendInfo={this.props.sendInfo}/>)}\r\n      </div>)\r\n    if (!this.props.tech['drawing'].researched){craftingMenu=<div/>}\r\n\r\n    return (\r\n      <div label=\"home\">\r\n        ur at home! <br/>\r\n        <div className=\"menu-smol\">\r\n          <div className='menu-item'> <button className='round' onClick={() => this.props.harvest('bluebs', .5+Math.random())}> + </button> pick bluebs <br/> </div>\r\n          <div className='menu-item'> <button className='round' onClick={() => this.props.harvest('wood', .5+Math.random())}> + </button> gather sticks <br/> </div>\r\n          {studyButton}\r\n          <div className='menu-item'> <button className='round' onClick={() => this.props.sendInfo('hi')}> + </button> hi <br/> </div>\r\n        </div>\r\n\r\n        {craftingMenu}\r\n\r\n        <div className=\"menu\">\r\n          buildings:\r\n          {Object.keys(this.props.buildings).map(name =>\r\n            <Building name={name}/>)}\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default HomeTab\r\n\r\nclass CraftingLine extends Component{\r\n  constructor(props){super(props)}\r\n  craft(name, n){\r\n    var info = this.props.info.recipes[name]\r\n    var enoughResources = true\r\n    if (Object.keys(this.props.resources).includes('max'+name)){\r\n      if (this.props.resources[name]+n > this.props.resources['max'+name]){\r\n        n = this.props.resources['max'+name]-this.props.resources[name]}}\r\n    for (var resource in info){\r\n      if (info[resource]*n>this.props.resources[resource]){\r\n        enoughResources=false\r\n        this.props.sendInfo('no resources :(')}}\r\n    if (enoughResources & n>0){\r\n      for(resource in info){\r\n        this.props.harvest(resource, -info[resource]*n)\r\n        this.props.sendInfo('u spent '+ info[resource] + ' ' + resource)}\r\n      this.props.harvest(name, n)}\r\n  }\r\n  render(){\r\n    if(this.props.info.visibleResources.includes(this.props.name)){\r\n      return (\r\n        <div className='menu-item'>\r\n          <button className='round-r' onClick = {()=>this.craft(this.props.name, 1)}> + </button> {this.props.name}\r\n          <div className='menu-item-mouseover'>\r\n            cost: <ul>\r\n              {Object.entries(this.props.info.recipes[this.props.name]).map(entry => <li> {entry[0]}: {entry[1]} </li>)} </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    else{return(<div />)}\r\n  }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  harvest,\r\n  build,\r\n  sendInfo,\r\n  applyEffects,\r\n } from '../../actions'\r\nimport HomeTab from '../../components/tabs/HomeTab'\r\n\r\nconst mapStateToProps = state => ({\r\n  buildings: state.buildings,\r\n  info: state.info,\r\n  resources: state.resources,\r\n  tech: state.tech,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  harvest,\r\n  build,\r\n  sendInfo,\r\n  applyEffects,\r\n}\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomeTab)\r\n","import React, { Component } from 'react'\r\n\r\nclass TownTab extends Component{\r\n  constructor(props){\r\n    super(props);}\r\n  render(){\r\n    var birbs = this.props.resources\r\n    var show = this.props.visibleJobs\r\n    var canEmploy = this.props.tech['training'].researched\r\n    if (canEmploy){\r\n      return (\r\n        <div label=\"home\">\r\n          give ur birbs jobs <br/>\r\n          u currently have {birbs.unemployed} free birbs <br/>\r\n          <div className='menu'>\r\n            jobs:\r\n            <JobLine job='foragers' hire={this.props.hire} birbs={birbs} show={show}/>\r\n            <JobLine job='woodpeckers' hire={this.props.hire} birbs={birbs} show={show}/>\r\n            <JobLine job='scholars' hire={this.props.hire} birbs={birbs} show={show}/>\r\n            <JobLine job='diggers' hire={this.props.hire} birbs={birbs} show={show}/>\r\n          </div>\r\n        </div>)}\r\n    else{ return <div> maybe you can train these birbs somehow? </div> }\r\n  }\r\n}\r\n\r\nclass JobLine extends Component{\r\n  constructor(props){super(props)}\r\n  render(){\r\n    if(this.props.show.includes(this.props.job)){\r\n      return (\r\n        <div className = 'menu-item'>\r\n          {this.props.job} ({this.props.birbs[this.props.job]})\r\n          <button className='round-y' onClick={() =>\r\n            this.props.hire(this.props.job, 1)}> + </button>\r\n          <button className='round-y' onClick={() =>\r\n            this.props.hire(this.props.job,-1)}> - </button> <br/>\r\n        </div>\r\n      )}\r\n    else{return(<div />)}\r\n  }\r\n}\r\n\r\nexport default TownTab\r\n","import { connect } from 'react-redux'\r\nimport TownTab from '../../components/tabs/TownTab'\r\nimport {\r\n  hire,\r\n  spawnUnit,\r\n} from '../../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  resources: state.resources,\r\n  visibleJobs: state.info.visibleJobs,\r\n  tech: state.tech\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  hire,\r\n  spawnUnit\r\n}\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TownTab)\r\n","import React, { Component } from 'react'\r\n\r\nclass Map extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.canvasRef = React.createRef();}\r\n\r\n  setupCanvas(canvas){\r\n    // Get the device pixel ratio, falling back to 1.\r\n    var dpr = window.devicePixelRatio || 1;\r\n    var rect = canvas.getBoundingClientRect();\r\n    canvas.width = rect.width * dpr;\r\n    canvas.height = rect.height * dpr;\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.scale(dpr, dpr);\r\n    return ctx;\r\n  }\r\n  renderBackground(ctx, pixSize){\r\n    var map = this.props.map\r\n    map = map[0].map((col, i) => map.map(row => row[i])); //transposes the map cuz im dumb\r\n    ctx.fillStyle= '#ddd'\r\n    ctx.fillRect(-1000, -1000, 2000, 2000);\r\n    for (var row = 0; row < map.length; row++) {\r\n      for (var col = 0; col < map[0].length; col++) {\r\n        switch (map[row][col]){\r\n          case 0:\r\n            ctx.fillStyle = '#85ff3f'; break;\r\n          case 1:\r\n            ctx.fillStyle = '#54afff'; break;\r\n          case 2:\r\n            ctx.fillStyle = '#d64017'; break;\r\n          case 3:\r\n            ctx.fillStyle = '#959699'; break;\r\n          case 4:\r\n            ctx.fillStyle = '#1cb525'; break;\r\n          default:\r\n            ctx.fillStyle = '#fff'; break;}\r\n        ctx.fillRect(pixSize*row+this.props.corner[1], pixSize*col+this.props.corner[0], pixSize, pixSize);\r\n  }}}\r\n  renderUnits(ctx, pixSize){\r\n    ctx.fillStyle= '#42b3f5';\r\n    for (var unit in this.props.units){\r\n      var unit = this.props.units[unit]\r\n      ctx.beginPath();\r\n      ctx.arc(pixSize*unit.location[0]+this.props.corner[1], pixSize*unit.location[1]+this.props.corner[0], pixSize/5, 0, 6.28);\r\n      ctx.lineWidth=pixSize/10;\r\n      ctx.stroke()\r\n      ctx.fill()\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    const canvas = this.canvasRef.current;\r\n    var ctx = canvas.getContext('2d');\r\n    const pixSize = this.props.pixSize;\r\n    this.renderBackground(ctx, pixSize);\r\n    this.renderUnits(ctx, pixSize);}\r\n  componentDidUpdate(){\r\n    const canvas = this.canvasRef.current;\r\n    var ctx = canvas.getContext('2d');\r\n    const pixSize = this.props.pixSize;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //get rid of this later so u dont have to redraw everything\r\n    this.renderBackground(ctx, pixSize);\r\n    this.renderUnits(ctx, pixSize);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className='map'>\r\n        <canvas ref={this.canvasRef} width=\"240\" height=\"240\"/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map\r\n","import { connect } from 'react-redux'\r\nimport { sendInfo} from '../actions'\r\nimport Map from '../components/Map'\r\n\r\nconst mapStateToProps = state => ({\r\n  map: state.info.map,\r\n  units: state.units,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  sendInfo,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Map)\r\n","import React, { Component } from 'react'\r\nimport Map from '../../containers/Map'\r\n\r\nclass MapTab extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {zoom: 3, pixSize: 12, corner: [0, 0]}}\r\n\r\n\r\n  spawnUnit(){\r\n    this.props.spawnUnit('borb', 'bluebirb', 'unemployed', [3.5, 6.5])}\r\n  sendUnitInfo(n){\r\n    if (n >= this.props.units.length | n<0){return this.props.sendInfo('unit ' + n + \" doesn't exist\")}\r\n    const unit = this.props.units[n]\r\n    return this.props.sendInfo(unit.name + ' the ' + unit.species + ' ' + unit.job + ' has id ' + n + ' and location ' + unit.location)\r\n  }\r\n  zoom(n){\r\n    const zoomDict = {7:2, 6:4, 5:6, 4:8, 3:12, 2:20, 1:28, 0:36}\r\n    if (this.state.zoom+n>=0 & this.state.zoom+n<=7){\r\n      this.setState({zoom: this.state.zoom+n, pixSize: zoomDict[this.state.zoom+n]})}}\r\n  move(x, y){\r\n    this.setState({corner: [this.state.corner[0]+x*20, this.state.corner[1]+y*20]})} //20 is the number of pixels the map shifting shifts by\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        its a map! <br />\r\n        zoom: <button className = 'round-g' onClick={() => this.zoom(-1)}> + </button>\r\n        <button className = 'round-g' onClick={() => this.zoom(1)}> - </button> <br/>\r\n        shift: <br/>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <button className = 'round-g' onClick={() => this.move(1, 0)}> &uarr; </button> <br/>\r\n        <button className = 'round-g' onClick={() => this.move(0, 1)}> &larr; </button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <button className = 'round-g' onClick={() => this.move(0, -1)}> &rarr; </button> <br/>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <button className = 'round-g' onClick={() => this.move(-1, 0)}> &darr; </button>\r\n        <Map pixSize={this.state.pixSize} corner={this.state.corner} /> <br />\r\n        spawn a borb: <button className='round-g' onClick={() => this.spawnUnit()}> + </button> <br/>\r\n        see info about last borb: <button className='round-g' onClick={() => this.sendUnitInfo(this.props.units.length-1)} /> <br/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapTab\r\n","import { connect } from 'react-redux'\r\nimport MapTab from '../../components/tabs/MapTab'\r\nimport {\r\n  addMap,\r\n  spawnUnit,\r\n  sendInfo,\r\n} from '../../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  map: state.info.map,\r\n  units: state.units,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  addMap,\r\n  spawnUnit,\r\n  sendInfo,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MapTab)\r\n","import ScienceTab from '../containers/tabs/ScienceTab'\r\nimport React, {Component} from 'react'\r\n\r\nclass Tech extends Component{\r\n  constructor(props){\r\n    super(props);}\r\n\r\n  getPath(parentCoords, coords){\r\n    const vertDist = coords[1]-parentCoords[1]-14 //subtract 14 to make room for the curvy parts\r\n    const horizDist = parentCoords[0]-coords[0]\r\n    var path\r\n\r\n      path = 'm'+(coords[0]+45)+' '+ (coords[1]+18) + 'v -7 '\r\n      path += 'c 0 0 ' + 0 + ' ' + -vertDist/2 + ' ' + horizDist/2 + ' ' + -vertDist/2\r\n      path += 'c 0 0 ' + horizDist/2 + ' ' + 0 + ' ' + horizDist/2 + ' ' + -vertDist/2\r\n      path += 'v -7'\r\n    return path\r\n  }\r\n  selectTech(name){\r\n    this.props.selectTech(name)}\r\n\r\n  render(){\r\n    const name = this.props.name\r\n    const tech = this.props.techList[name]\r\n    if(!name){return(<div> got a null tech </div>)}\r\n    var paths = []\r\n    var display = false\r\n    if (tech.parents.length==0){display=true}\r\n    for (var parentName of tech.parents){\r\n      const parent = this.props.techList[parentName]\r\n      if (!parent){\r\n        console.log('unknown parent' + parentName)}\r\n      paths.push(this.getPath(parent.position, tech.position))\r\n      if (parent.researched){\r\n        display = true}}\r\n    var buttonToRender = ''\r\n    if (display | tech.researched){\r\n      if (tech.researched){\r\n        buttonToRender=<button className='tech-researched' onClick={() => this.selectTech(name)}> {name} </button>}\r\n      else{\r\n        buttonToRender=<button className='tech' onClick={() => this.selectTech(name)}> {name} </button>}}\r\n    else{\r\n      buttonToRender=<div />\r\n      paths=[]}\r\n\r\n    const coordsHtml = {left: tech.position[0], top: tech.position[1]}\r\n    return(\r\n      <div>\r\n        <div className='lines'><svg height='600px' width='600px'>\r\n          {paths.map(path => <path d={path} className='line'/> )}\r\n\r\n        </svg></div>\r\n        <div className='tech-wrapper' style={coordsHtml}> {buttonToRender} </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tech\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  sendInfo,\r\n  selectTech,\r\n} from '../actions'\r\nimport Tech from '../components/Tech'\r\n\r\nconst mapStateToProps = state => ({\r\n  techList: state.tech,\r\n  info: state.info,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  sendInfo,\r\n  selectTech,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tech)\r\n","import React, { Component } from 'react'\r\nimport Tech from '../../containers/Tech'\r\nimport Tree from 'react-d3-tree';\r\n\r\nclass ScienceTab extends Component{\r\n  constructor(props){super(props); }\r\n\r\n  research(selected){\r\n    var info = this.props.tech[selected]\r\n    var enoughResources = true\r\n    var prereqsSatisfied = true\r\n    for (var resource in info.cost){\r\n      if (info.cost[resource]>this.props.resources[resource]){\r\n        enoughResources=false\r\n        this.props.sendInfo('no resources :(')}}\r\n    for (var parent in info.parents){\r\n      if (!this.props.tech[info.parents[parent]].researched){\r\n        prereqsSatisfied=false\r\n        this.props.sendInfo('previous techs not researched yet :(')}}\r\n    if (enoughResources & prereqsSatisfied){\r\n      for(resource in info.cost){\r\n        this.props.harvest(resource, -info.cost[resource])\r\n        this.props.sendInfo('u spent '+ info.cost[resource] + ' ' + resource)}\r\n      this.props.research(selected)\r\n      this.props.applyModifiers(selected, 1)\r\n      this.props.applyEffects(selected, 1)\r\n      console.log(selected)\r\n      switch (selected){\r\n        case 'teaching':\r\n          this.props.addJob('scholars')\r\n          break\r\n        case 'woodworking':\r\n          this.props.addResource('boxes')\r\n          break\r\n        case 'fire':\r\n          this.props.addBuilding('campfire')\r\n          this.props.addTab('town', 'settlement')\r\n          this.props.addResource('happiness')\r\n          break\r\n        case 'digging':\r\n          this.props.addResource('clay')\r\n          this.props.addResource('stone')\r\n          this.props.addJob('diggers')\r\n          break\r\n        case 'pottery':\r\n          this.props.addBuilding('kiln')\r\n          this.props.addResource('ceramic')\r\n        case 'drawing':\r\n          this.props.addResource('drawings')\r\n          this.props.addResource('happiness')\r\n          break\r\n        case 'writing':\r\n          this.props.addResource('books')\r\n          break\r\n        case 'cartography':\r\n          this.props.addTab('map', 'map')\r\n          break\r\n        case 'construction':\r\n          this.props.addBuilding('library')\r\n          break\r\n      }\r\n    }\r\n  }\r\n\r\n  displaySelected(){\r\n    var selected = this.props.info.selectedTech\r\n    var selectedTech = this.props.tech[selected]\r\n    var displayResearch\r\n    if (selectedTech.researched){\r\n      displayResearch = <div>{\"researched\"}<br/></div> }\r\n    else{\r\n      displayResearch = <div>{\"research?\"} <button className='round' onClick={() => this.research(selected)}> </button> <br/> </div> }\r\n    return (\r\n      <div>\r\n        <h2>{selected}</h2>\r\n        {selectedTech.description}<br/>\r\n        cost:\r\n          {Object.keys(selectedTech.cost).map(resource => <h4>&nbsp;&nbsp;{resource + ' '+ selectedTech.cost[resource]} </h4> )}\r\n        {displayResearch} <br/>\r\n      </div>\r\n    )\r\n  }\r\n  render(){\r\n    const techList = this.props.tech\r\n    const techObjectsList = Object.keys(techList).map(\r\n      name => <Tech name={name} techList={techList} research={this.props.research}/> )\r\n    return (\r\n      <div label=\"science\" className=\"science\">\r\n        <div className=\"tree-wrapper\">\r\n          {techObjectsList}</div>\r\n        <div className=\"tech-info\">\r\n          {this.displaySelected()} </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ScienceTab\r\n","import { connect } from 'react-redux'\r\nimport ScienceTab from '../../components/tabs/ScienceTab'\r\nimport {\r\n  research,\r\n  harvest,\r\n  sendInfo,\r\n  addMap,\r\n  addTab,\r\n  addBuilding,\r\n  addResource,\r\n  addJob,\r\n  applyModifiers,\r\n  applyEffects,\r\n} from '../../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech,\r\n  resources: state.resources,\r\n  info: state.info,\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n  research,\r\n  harvest,\r\n  sendInfo,\r\n  addMap,\r\n  addTab,\r\n  addBuilding,\r\n  addResource,\r\n  addJob,\r\n  applyModifiers,\r\n  applyEffects,\r\n})\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ScienceTab)\r\n","import React from 'react';\nimport './App.scss';\n\nimport Sidebar from '../containers/Sidebar'\nimport Infobox from '../containers/Infobox'\nimport Tabs from '../containers/tabs/VisibleTabs.js'\nimport HomeTab from '../containers/tabs/HomeTab.js'\nimport TownTab from '../containers/tabs/TownTab.js'\nimport MapTab from '../containers/tabs/MapTab.js'\nimport ScienceTab from '../containers/tabs/ScienceTab.js'\n\nimport {initState} from '../initialState.js'\nvar getStuff = require('../modules/getStuff.js');\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.counter = 1\n    this.state = {daylength: 0, time: 0}\n    this.props.applyEffects('base', 1)\n    this.props.sendInfo('there are also a lot of blueb bushs to eat.')\n    this.props.sendInfo('you look around and see lots of birbs flying around.')\n    this.props.sendInfo('you wake up in a grassy field...')\n    this.props.addMap(\n         [[3, 3, 0, 1, 1, 1, 1, 1, 0, 0, 3, 3, 3, 4, 0, 0, 0, 0, 0, 1],\n          [3, 3, 0, 1, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 4, 4, 0, 0, 0, 0],\n          [3, 3, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 4, 0, 0, 0, 0],\n          [3, 4, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0],\n          [3, 4, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0],\n          [3, 4, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 3, 3, 0, 3, 0, 0, 0, 0],\n          [4, 0, 0, 2, 0, 0, 1, 1, 1, 1, 1, 0, 3, 3, 0, 3, 0, 0, 0, 0],\n          [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 3, 3, 3, 3, 0, 0, 0],\n          [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 3, 3, 3, 3, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 3, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 3, 3, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 3, 3, 3, 0, 0],\n          [4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 3, 3, 0, 0],\n          [4, 4, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 3, 3, 0, 0],\n          [4, 4, 0, 0, 0, 4, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 3, 3, 0, 0],\n          [4, 4, 4, 0, 4, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 4, 0, 3, 3],\n          [4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 1, 1, 0, 0, 0, 4, 0, 0, 0, 3],\n          [4, 4, 0, 0, 0, 0, 4, 0, 0, 1, 1, 1, 0, 0, 0, 4, 4, 0, 0, 3],\n          [4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 3, 4, 0, 0], ])\n    //this.load('startup')\n    //readd the load when u release\n  }\n\n  unlockEverything(){ //for debugging ez\n    this.props.setProgression(3)\n    this.props.addTab('town', 'settlement')\n    this.props.addTab('science', 'study')\n    this.props.addResource('birbs')\n    this.props.addResource('knowledge')\n    this.props.set('maxknowledge', 50000)\n    this.props.harvest('wood', 100)\n    this.props.harvest('bluebs', 100)\n    this.props.harvest('knowledge', 50000)\n    this.props.build('nest', 10)\n    this.props.applyEffects('nest', 10)}\n\n  componentDidMount(){\n    this.timerID = setInterval(() => this.tick(), 100)}\n  tick(){\n    //in game time change\n    if (this.counter%5==0){\n      var newTime = new Date().getTime()\n      this.setState({dayLength: (newTime - this.state.time), time: newTime})\n      this.props.tick()}\n\n    //early game (pre-science) progress tracking\n    if (this.props.info.progression<3 & this.counter%50==0){\n      if (this.props.info.progression==0){\n        if (this.props.buildings['nest'].number>0 & this.props.resources['bluebs']>1){\n          this.props.setProgression(1)\n          this.props.addTab('town', 'birb tree')\n          this.props.addResource('birbs')\n          this.props.adoptBirb(1);\n          this.props.spawnUnit('borb', 'unemployed', 'unemployed', [3.5, 6.5])\n          this.props.sendInfo('a birb lands in ur nest! maybe you can be friends? maybe other birbs will come too?')}}\n      if (this.props.info.progression==1){\n        if (this.props.resources['birbs']>=3){\n          this.props.setProgression(2)\n          this.props.addResource('knowledge')\n          this.props.sendInfo('maybe you can learn how to do more things if u study.')}}\n      if (this.props.info.progression==2){\n        if (this.props.resources['knowledge']>5){\n          this.props.setProgression(3)\n          this.props.addTab('science', 'study')}}}\n    //borb inflow and outflow\n    if (this.counter%20==0 & this.props.info.progression>0){\n      if ((Math.random()<.1+(.1*(this.props.resources['maxbirbs']-this.props.resources['birbs'])))&(this.props.resources['bluebs']>1)){\n        this.props.adoptBirb(1);}\n      if ((this.props.resources['bluebs']<1) & (this.props.resources['birbs']>0) & (Math.random()<.5)){\n        var hunger = this.props.info.hunger\n        if(hunger==0){\n          if(this.props.info.progression<1){\n            this.props.sendInfo(\"your borbs are hungery.... feed them or they'll fly away!!\")}\n          else{\n            (this.props.sendInfo(\"your borbs are hungery... \"))}}\n        this.props.setHunger(hunger + 1)\n        if(hunger>4){\n          this.props.sendInfo(\"a borb flew away :(\")\n          this.props.adoptBirb(-1);\n          if(this.props.resources['woodpeckers']>0){this.props.hire('woodpeckers', -1)}\n          else if (this.props.resources['scholars']>0){this.props.hire('scholars', -1)}\n          else {this.props.hire('farmers', -1)}\n          this.props.setHunger(0)}}}\n    //unit moving\n    if (this.counter%2==0){\n      for (const unit in this.props.units){\n        this.props.moveUnit(unit, (Math.random()-.5)*.2, (Math.random()-.5)*.2)}}\n    //income\n    if (this.counter%1==0){\n      for (const incomeGenerator of Object.keys(this.props.effects.income)){\n        this.props.income(incomeGenerator, getStuff.getNum(incomeGenerator, this.props.buildings, this.props.resources, this.props.tech))}}\n    //if (this.counter%200==0){\n    //  this.save('autosave')}\n    if (this.counter%200==0 & Math.random()<.01){this.props.sendInfo('a borb c h o r p s')}\n    this.counter = (this.counter+1)%1200\n  }\n\n  load(whence){\n    try{\n      const inState = JSON.parse(localStorage.getItem('state'))\n      if (inState!= null){\n        if(inState['resources']['maxbluebs']!=0){\n          this.props.load()\n          this.props.sendInfo('loaded!')}}\n      else {if(whence=='button'){this.props.sendInfo('no save state found :c')}}}\n    catch (err) {if(whence=='button'){this.props.sendInfo('no save state found :/')}}}\n  save(whence){\n    localStorage.setItem('state', JSON.stringify(this.props.state))\n    if(whence=='button'){this.props.sendInfo('saved!') }\n    //if(whence=='autosave'){this.props.sendInfo('autosaved!') }\n    if(whence=='reset'){\n      localStorage.setItem('state', undefined)\n      this.props.sendInfo('reset successful! refresh the page to start from nothing (or click save right now if you want to cancel the reset!!)')\n      console.log(localStorage.getItem('state'))}}\n  render(){\n    return (\n      <div>\n        <Sidebar/>\n        <div className='not-sidebar'>\n          <div className='header'>\n            <h3>{this.state.dayLength}\n              <button className='save-button' onClick={() => this.unlockEverything()}> debugmode </button>\n              <button className='save-button' onClick={() => this.save('button')}> save </button>\n              <button className='save-button' onClick={() => this.load('button')}> load </button>\n              <button className='save-button' onClick={() => this.save('reset')}> hard reset </button>\n            </h3>\n            <h1>bluebs game </h1>\n          </div>\n          <Tabs\n            visibleTabs = {this.props.info.visibleTabs}>\n            <div label='home'>\n              <HomeTab/> </div>\n            <div label=\"town\">\n              <TownTab/> </div>\n            <div label=\"science\">\n              <ScienceTab /> </div>\n            <div label=\"map\">\n              <MapTab /></div>\n          </Tabs>\n        <Infobox />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux'\r\nimport App from '../components/App'\r\n\r\n\r\nimport {\r\n  harvest,\r\n  build,\r\n  adoptBirb,\r\n  set,\r\n  sendInfo,\r\n  tick,\r\n  addTab,\r\n  addResource,\r\n  addMap,\r\n  addBuilding,\r\n  moveUnit,\r\n  spawnUnit,\r\n  income,\r\n  applyEffects,\r\n  setHunger,\r\n  setProgression,\r\n  research,\r\n  hire,\r\n  load,\r\n} from '../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  state: state,\r\n  resources: state.resources,\r\n  buildings: state.buildings,\r\n  info: state.info,\r\n  units: state.units,\r\n  tech: state.tech,\r\n  effects: state.effects,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  harvest,\r\n  build,\r\n  adoptBirb,\r\n  set,\r\n  sendInfo,\r\n  tick,\r\n  addTab,\r\n  addResource,\r\n  addMap,\r\n  addBuilding,\r\n  moveUnit,\r\n  spawnUnit,\r\n  income,\r\n  applyEffects,\r\n  setHunger,\r\n  setProgression,\r\n  research,\r\n  hire,\r\n  load,\r\n}\r\n\r\nexport default connect( //connect connects a react component to a redux store\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n","import update from 'react-addons-update'\r\n\r\nconst resources = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'SET':\r\n      return update(state, {[action.name]: {$set: action.n}})\r\n    case 'ADOPT_BIRB':\r\n      if (state['birbs'] <= state['maxbirbs']-action.n){\r\n        return {...state,\r\n          ['birbs']: state['birbs']+action.n,\r\n          ['unemployed']: state['unemployed']+action.n,}}\r\n      else {return state}\r\n    case 'HIRE':\r\n      var j = state[action.name]+action.n\r\n      if ((state.unemployed >= action.n) & (action.n+state[action.name]>=0)){\r\n        return update(state, {\r\n          [action.name]: {$set: j},\r\n          'unemployed': {$set: state['unemployed']-action.n}})}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default resources\r\n","import update from 'react-addons-update'\r\n\r\n\r\nconst info = (state = [], action) => {\r\n  switch (action.type) {\r\n\r\n    //these add functions are just to make things visible as u unlock them in the game\r\n    case 'ADD_TAB':\r\n      return update(state, {visibleTabs: {[action.key]: {$set: action.name}}})\r\n    case 'ADD_RESOURCE':\r\n      if (!(action.name in state.visibleResources)){\r\n        return Object.assign({}, state, {\r\n          visibleResources: state.visibleResources.concat(action.name)})}\r\n      else{return state}\r\n    case 'ADD_JOB':\r\n      if (!(action.name in state.visibleJobs)){\r\n        return Object.assign({}, state, {\r\n          visibleJobs: state.visibleJobs.concat(action.name)})}\r\n      else{return state}\r\n    case 'ADD_MAP':\r\n      return {...state, map:action.map}\r\n    case 'ADD_BUILDING':\r\n      return update(state, {visibleBuildings: {$push: [action.name]}})\r\n    case 'SELECT_TECH':\r\n      return {...state, selectedTech:action.name}\r\n    case 'TICK':\r\n      var season = state.time[0]\r\n      var day = state.time[1]\r\n      var hour = state.time[2] + 1\r\n      const nextSeasonDict = {'spring':'summer', 'summer':'fall', 'fall':'winter', 'winter':'spring'}\r\n      if(hour>=24){\r\n        hour=0\r\n        day=day+1}\r\n      if(day>=31){\r\n        day=1\r\n        season=nextSeasonDict[season]}\r\n      return {...state,\r\n        time: [season, day, hour]}\r\n    case 'SEND_INFO':\r\n      if (state.info > 100){\r\n        state.info.pop()}\r\n      return Object.assign({}, state, {\r\n        info: [action.info].concat(state.info)})\r\n    case 'SET_PROGRESSION':\r\n      return update(state, {progression: {$set: action.n}})\r\n    case 'SET_HUNGER':\r\n      return update(state, {hunger: {$set: action.n}})\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default info\r\n","\r\nimport update from 'react-addons-update'\r\n\r\nconst buildings = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'BUILD':\r\n      const newNum = state[action.name].number+action.n\r\n      return update(state, {[action.name]: {number: {$set: newNum}}})\r\n    case 'INCREMENT_COST':\r\n      const newCosts =  Object.assign({}, state[action.name].cost)\r\n      if (action.n==1){\r\n        for (var resource of Object.keys(newCosts)){\r\n          newCosts[resource] = state[action.name].cost[resource]*state[action.name].costRatio}}\r\n      if(action.n==-1){\r\n        for (var resource of Object.keys(newCosts)){\r\n          newCosts[resource] = state[action.name].cost[resource]/state[action.name].costRatio}}\r\n      return update(state, {[action.name]: {cost: {$set: newCosts}}})\r\n    default:\r\n      return state\r\n    }\r\n  }\r\nexport default buildings\r\n","import update from 'react-addons-update'\r\n\r\nconst units = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'SPAWN_UNIT':\r\n      var newUnit = {\r\n        id: action.id,\r\n        name: action.name,\r\n        species: action.species,\r\n        job: action.job,\r\n        location: action.location};\r\n      return [...state, newUnit]\r\n    case 'MOVE_UNIT':\r\n      const newLoc = [action.x + state[action.id].location[0], action.y + state[action.id].location[1]]\r\n      return update(state, {[action.id]: {location: {$set: newLoc}}})\r\n    default:\r\n      return state\r\n    }\r\n  }\r\n\r\nexport default units\r\n","import update from 'react-addons-update'\r\n\r\nconst tech = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'RESEARCH':\r\n      return update(state, {[action.name]: {researched: {$set: 1}}})\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default tech\r\n","import update from 'react-addons-update'\r\n\r\nconst effects = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_EFFECT':\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default effects\r\n","import update from 'react-addons-update'\r\nvar getStuff = require('../modules/getStuff.js');\r\n\r\nexport var applyEffects = (resources, effects, name, n) => { //why do i have to use arrow notation here???\r\n  var newResources = Object.assign({}, resources)\r\n  var effects = effects.constant[name]\r\n  if(effects){\r\n    for (var target of Object.keys(effects)){\r\n      for (var resource of Object.keys(resources)){ //only affects resources\r\n        if(resource==target){\r\n          newResources[resource] += effects[target]*n}}}}\r\n  return newResources}\r\nexport var applyModifiers = (state, name, n) => {\r\n  var effects = state.effects\r\n  var prevNumberOfModifiers = getStuff.getNum(name, state.buildings, state.resources, state.tech)\r\n  var newEffects = Object.assign({}, effects)\r\n  var newResources = Object.assign({}, state.resources)\r\n  var modifiers = effects.modifiers[name]\r\n  if(modifiers){\r\n    for (var targetGenerator of Object.keys(modifiers)){\r\n      for (var targetResource of Object.keys(modifiers[targetGenerator])){\r\n        if(modifiers[targetGenerator][targetResource].income==1){\r\n          for (var generator of Object.keys(effects.income)){\r\n            if (generator==targetGenerator){\r\n              for (var resource of Object.keys(effects.income[generator])){\r\n                if (resource==targetResource){\r\n                  newEffects.income[generator][resource] /= (1+(prevNumberOfModifiers*modifiers[targetGenerator][targetResource].value))\r\n                  newEffects.income[generator][resource] *= (1+((n+prevNumberOfModifiers)*modifiers[targetGenerator][targetResource].value))\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else{\r\n          for (var generator of Object.keys(effects.constant)){\r\n            if(generator==targetGenerator){\r\n              var numberOfGenerators = getStuff.getNum(generator, state.buildings, state.resources, state.tech)\r\n              newResources = applyEffects(newResources, effects, generator, -numberOfGenerators)\r\n              for (var resource of Object.keys(effects.constant[generator])){\r\n                if (resource==targetResource){\r\n                  newEffects.constant[generator][resource] /= (1+(prevNumberOfModifiers*modifiers[targetGenerator][targetResource].value))\r\n                  newEffects.constant[generator][resource] *= (1+((n+prevNumberOfModifiers)*modifiers[targetGenerator][targetResource].value))\r\n                }\r\n              }\r\n              newResources = applyEffects(newResources, effects, generator, numberOfGenerators)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [newEffects, newResources]\r\n}\r\n\r\nconst bigReducers = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'APPLY_EFFECTS': //to be called on the creation of a generator (ex: building or research)\r\n      return {...state, resources: applyEffects(state.resources, state.effects, action.name, action.n)}\r\n    case 'APPLY_MODIFIERS':\r\n      return {...state, effects: applyModifiers(state, action.name, action.n)[0], resources: applyModifiers(state, action.name, action.n)[1]}\r\n    case 'INCOME': //only incomes resources\r\n      var newResources = Object.assign({}, state.resources)\r\n      var incomes = state.effects.income[action.name]\r\n      var enoughResources = true\r\n      for (var target of Object.keys(incomes)){\r\n        for (var resource of Object.keys(state.resources)){\r\n          if(resource==target){\r\n            const current = state.resources[resource]\r\n            var max = 10000000000000\r\n            var amount=action.n*incomes[target]\r\n            if(state.info.allJobs.includes(action.name) | action.name=='birbs'){\r\n              amount *= state.resources['happiness']}\r\n            if('max'+resource in state.resources){\r\n              max = state.resources['max'+resource]}\r\n            newResources[resource]=current+amount\r\n            if(current+amount<=0){\r\n              enoughResources = false\r\n              newResources[resource] = 0}\r\n            if(current+amount>max){\r\n              newResources[resource] = max}\r\n            var resourceChange = newResources[resource]-state.resources[resource]\r\n            if (Object.keys(state.effects.constant).includes(resource) & resourceChange!=0){\r\n              newResources = applyEffects(newResources, state.effects, resource, resourceChange)\r\n            }}}}\r\n      if (enoughResources){\r\n        return {...state, resources: newResources}}\r\n      else {return state}\r\n    case 'HARVEST':\r\n      const current = state.resources[action.name]\r\n      var max = 10000000000000\r\n      if('max'+action.name in Object.keys(state)){\r\n        max = state.resources['max'+action.name]}\r\n      var newResource=current+action.n\r\n      if(newResource<=0){\r\n        newResource = 0}\r\n      if(newResource>max){\r\n        newResource = max}\r\n      var resourceChange = newResource-state.resources[action.name]\r\n      var newResources = Object.assign({}, state.resources)\r\n      newResources[action.name]=newResource\r\n      if (Object.keys(state.effects.constant).includes(action.name) & resourceChange!=0){\r\n        newResources = applyEffects(newResources, state.effects, action.name, resourceChange)}\r\n      return {...state, resources: newResources}\r\n    case 'LOAD':\r\n      return JSON.parse(localStorage.getItem('state'));\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default bigReducers\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n","import { combineReducers } from 'redux'\r\nimport reduceReducers from 'reduce-reducers'\r\nimport resources from './resources'\r\nimport info from './info'\r\nimport buildings from './buildings'\r\nimport units from './units'\r\nimport tech from './tech'\r\nimport effects from './effects'\r\n\r\n//reducers that mess with entire state go in here\r\nimport bigReducers from './bigReducers'\r\n\r\n//reducers that mess with one slice of state go in these children reducer files\r\nconst smolReducers = combineReducers({\r\n  resources,\r\n  info,\r\n  buildings,\r\n  units,\r\n  tech,\r\n  effects,\r\n})\r\n\r\nconst rootReducer = reduceReducers(\r\n  smolReducers,\r\n  bigReducers)\r\n\r\nexport default rootReducer\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nimport {initState} from './initialState.js'\n\n\n\n\nconst container = document.createElement('div');\ndocument.body.appendChild(container)\n\nvar state = Object.assign({}, initState)\nconst store = createStore(rootReducer, state)\n\nrender(\n  <Provider store={store}>\n    <head>\n      <meta name=\"viewport\"\n        content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"/>\n    </head>\n    <body>\n      <App/>\n    </body>\n  </Provider>,\n  container\n)\n\n\n\n//import * as serviceWorker from './serviceWorker';\n//serviceWorker.unregister(); note i deleted the serviceworker\n","\r\nexport {initState}\r\nconst initState = {\r\n  resources: {\r\n    'bluebs': 0,\r\n    'wood': 0,\r\n    'clay': 0,\r\n    'stone': 0,\r\n    'knowledge': 0,\r\n    'books': 0,\r\n    'drawings': 0,\r\n    'boxes': 0,\r\n    'ceramic': 0,\r\n\r\n    'maxbluebs': 0,\r\n    'maxwood': 0,\r\n    'maxclay': 0,\r\n    'maxstone': 0,\r\n    'maxknowledge': 0,\r\n    'maxbooks': 0,\r\n    'maxdrawings': 0,\r\n\r\n    'birbs': 0,\r\n    'maxbirbs': 0,\r\n    'unemployed': 0,\r\n    'foragers': 0,\r\n    'woodpeckers': 0,\r\n    'scholars': 0,\r\n    'diggers': 0,\r\n\r\n    'happiness': 1.0,\r\n  },\r\n\r\n  buildings: {\r\n    'base':{\r\n      number: 1,\r\n      desc: \"ur tent! (wait, u shouldn't be seeing this...)\",\r\n      cost: {},\r\n      costRatio: 0,},\r\n    'nest':{\r\n      number: 0,\r\n      desc: 'a little home for two birbs to live',\r\n      cost: {'wood':10,},\r\n      costRatio: 1.1,},\r\n    'birbhouse':{\r\n      number: 0,\r\n      desc: 'space for four birbs to live!' ,\r\n      cost: {'wood':30},\r\n      costRatio: 1.1,},\r\n    'campfire':{\r\n      number: 0,\r\n      desc: 'keeps u and ur birbs warm and happy',\r\n      cost: {'wood':20},\r\n      costRatio: 2,},\r\n    'library':{\r\n      number: 0,\r\n      desc: 'place to store all ur drawings and books!',\r\n      cost: {'wood':30},\r\n      costRatio: 1.1},\r\n    'kiln': {\r\n      number: 0,\r\n      desc: 'fires pottery',\r\n      cost: {'clay':10},\r\n      costRatio: 1.1, },\r\n  },\r\n\r\n  info: {\r\n    visibleTabs: {\r\n      'home': 'tent', },\r\n    visibleResources:[\r\n      'bluebs',\r\n      'wood',],\r\n    visibleJobs:[\r\n      'woodpeckers',\r\n      'foragers',],\r\n    allJobs: [\r\n      'foragers', 'woodpeckers', 'scholars', 'diggers'],\r\n    visibleBuildings:[\r\n      'nest',],\r\n    info: [],\r\n    time: ['spring', 1, 1],\r\n    map: [],\r\n    selectedTech: 'studying',\r\n    progression: 0,\r\n    hunger: 0,\r\n    recipes: {\r\n      'boxes': {'wood': 50},\r\n      'drawings': {},\r\n      'books': {'wood': 1, 'bluebs': 1},\r\n    }\r\n  },\r\n\r\n  units: [],\r\n\r\n  tech:{\r\n    'studying': {position: [150, 0], researched: 0, parents: [], children: ['training', 'woodworking'],\r\n      description: 'learn new things about the world!', cost:{'knowledge': 2}},\r\n    'training': {position: [200, 40], researched: 0, parents: ['studying'], children: ['teaching'],\r\n      description: 'teach ur birbs tricks!', cost:{'knowledge':5}},\r\n    'teaching': {position: [250, 80], researched: 0, parents: ['training'], children: ['drawing'],\r\n      description: 'maybe ur birbs can learn on their own?', cost:{'knowledge':10}},\r\n    'drawing': {position: [240, 120], researched: 0, parents: ['teaching'], children: ['writing'],\r\n      description: 'draw with stick to remember things', cost: {'knowledge': 30}},\r\n\r\n    'woodworking': {position: [100, 50], researched: 0, parents: ['studying'], children: ['digging', 'fire', 'construction'],\r\n      description: 'carve fun things', cost:{'knowledge':20, 'wood': 20} },\r\n    'digging': {position: [60, 100], researched: 0, parents: ['woodworking'], children: ['pottery'],\r\n      description: 'there r all sorts of things in the ground...', cost: {'knowledge': 40, 'wood': 5}},\r\n    'fire': {position: [150, 100], researched: 0, parents: ['woodworking'], children: ['pottery'],\r\n      description: 'hot!', cost: {'knowledge': 30, 'wood': 15}},\r\n    'pottery': {position: [130, 135], researched: 0, parents: ['digging', 'fire'], children: [],\r\n      description: 'pots to hold things', cost: {'knowledge': 40}},\r\n    'construction': {position: [10, 70], researched: 0, parents: ['woodworking'], children: [],\r\n      description: 'build birb houses that can hold more birbs... and maybe more :o', cost:{'knowledge': 60}},\r\n\r\n    'math': {position: [260, 160], researched: 0, parents: ['drawing'], children: ['cartography'],\r\n      description: 'think about numbers n stuf.. ', cost:{'knowledge': 20}},\r\n    'writing': {position: [180, 160], researched: 0, parents:['drawing'], children: ['cartography'],\r\n      description: 'draw with stick to remember things', cost: {'knowledge': 10}},\r\n    'cartography': {position: [250, 200], researched: 0, parents:['writing', 'math'], children: [],\r\n      description: 'doodle a map', cost: {'knowledge': 10}},\r\n    'exploration': {position: [260, 240], researched: 0, parents:['cartography'], children: [],\r\n      description: 'send ur birbs on an adventure!', cost: {'knowledge': 30}},\r\n  },\r\n\r\n  effects: {\r\n    constant: {\r\n      'base': {'maxbluebs': 100,\r\n               'maxwood': 100,\r\n               'maxclay': 100,\r\n               'maxstone': 50,\r\n               'maxknowledge': 50,\r\n               'maxboxes': 10,\r\n               'maxdrawings': 10,\r\n               'maxbooks': 10,},\r\n      'nest': {'maxbirbs': 2},\r\n      'birbhouse': {'maxbirbs': 4},\r\n      'library': {'maxbooks':20,\r\n                  'maxdrawings': 20},\r\n      'boxes': {'maxwood': 100,\r\n              'maxbluebs': 100,\r\n              'maxclay': 40,\r\n              maxstone: 20,\r\n              maxbooks: 2,},\r\n      'drawings': {'maxknowledge': .1},\r\n      'books': {'maxknowledge': 1},\r\n      'campfire': {'happiness': .01},\r\n    },\r\n    income: {\r\n      'birbs': {'bluebs': -.005},\r\n      'foragers': {\"bluebs\": .02},\r\n      'woodpeckers': {'wood': .02},\r\n      'diggers': {'clay': .01,\r\n                  'stone': .002,},\r\n      'scholars': {'knowledge': .003},\r\n      'kiln': {'wood': -.01,\r\n              'clay': -.01,\r\n              'ceramic': .001,},\r\n    },\r\n    modifiers: {\r\n      'library': {'scholars': {'knowledge': {income: 1, value: .1}}},\r\n      'campfire': {'nest': {'maxbirbs': {income: 0, value: .1}}},\r\n\r\n    }\r\n  },\r\n\r\n}\r\n"],"sourceRoot":""}